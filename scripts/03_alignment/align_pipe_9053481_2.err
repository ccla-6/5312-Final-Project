samblaster: Version 0.1.24
Looking to launch executable "/isg/shared/apps/bwa-mem2/2.1/bwa-mem2.avx", simd = .avx
samblaster: Inputting from stdin
samblaster: Outputting to stdout
Launching executable "/isg/shared/apps/bwa-mem2/2.1/bwa-mem2.avx"
-----------------------------
Executing in AVX mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: ../../results/03_Alignment/bwa_index/CanFam4.0
* Entering FMI_search
* Index file found. Loading index from ../../results/03_Alignment/bwa_index/CanFam4.0.bwt.2bit.64
* Reference seq len for bi-index = 4403698311
* sentinel-index: 4403369887
* Count:
0,	1
1,	1292388690
2,	2201849156
3,	3111309622
4,	4403698311

* Reading other elements of the index from files ../../results/03_Alignment/bwa_index/CanFam4.0
* Index prefix: ../../results/03_Alignment/bwa_index/CanFam4.0
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = ../../results/03_Alignment/bwa_index/CanFam4.0.0123
* Reference genome size: 4403698310 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 975.3849 MB
2. Memory pre-allocation for BSW: 1677.3192 MB
3. Memory pre-allocation for BWT: 541.1992 MB
------------------------------------------
* Threads used (compute): 7
* No. of pipeline threads: 2

[0000] read_chunk: 70000000, work_chunk_size: 70000075, nseq: 482150
	[0000][ M::kt_pipeline] read 482150 sequences (70000075 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000175, nseq: 483218
	[0000][ M::kt_pipeline] read 483218 sequences (70000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 193782, 5, 42)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (72, 620, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (848.11, 936.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.24, 41.43)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1131, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (1226.22, 718.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482150 reads in 298.632 CPU sec, 43.536 real sec
[0000] Reallocating initial memory allocations!!
samblaster: Loaded 38 header sequence entries.
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000119, nseq: 481988
	[0000][ M::kt_pipeline] read 481988 sequences (70000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 194338, 3, 61)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 571, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (699.26, 652.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (342.84, 41.31)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1212, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1439.33, 1117.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483218 reads in 292.685 CPU sec, 41.923 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000041, nseq: 483678
	[0000][ M::kt_pipeline] read 483678 sequences (70000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 193927, 4, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 923, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1103.44, 837.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 341, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 497)
[0000][PE] mean and std.dev: (342.41, 41.30)
[0000][PE] low and high boundaries for proper pairs: (125, 559)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1009, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (995.92, 578.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481988 reads in 289.337 CPU sec, 41.405 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000033, nseq: 482746
	[0000][ M::kt_pipeline] read 482746 sequences (70000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 194192, 2, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 715, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (739.28, 655.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (342.86, 41.26)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1127, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1355.70, 999.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483678 reads in 290.177 CPU sec, 41.481 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000239, nseq: 483922
	[0000][ M::kt_pipeline] read 483922 sequences (70000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 194317, 6, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 819, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (817.49, 552.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.12, 41.31)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1032, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (1098.74, 676.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482746 reads in 292.532 CPU sec, 41.964 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 194410, 7, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 709, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (700.02, 544.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.28, 41.26)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (533, 1004, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1125.44, 907.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000139, nseq: 485364
	[0000][ M::kt_pipeline] read 485364 sequences (70000139 bp)...
	[0000][ M::mem_process_seqs] Processed 483922 reads in 307.335 CPU sec, 43.999 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000199, nseq: 485366
	[0000][ M::kt_pipeline] read 485366 sequences (70000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 195117, 1, 39)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1040, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5975)
[0000][PE] mean and std.dev: (1302.27, 1190.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.36, 41.12)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 950, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1270.89, 1116.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485364 reads in 287.485 CPU sec, 41.195 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000200, nseq: 485196
	[0000][ M::kt_pipeline] read 485196 sequences (70000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 195888, 4, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (544, 841, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (1004.55, 848.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.10, 41.17)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 942, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (1128.91, 817.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485366 reads in 288.185 CPU sec, 41.255 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000088, nseq: 485218
	[0000][ M::kt_pipeline] read 485218 sequences (70000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 195092, 5, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 718, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (926.68, 923.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.14, 41.09)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1138, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (1071.75, 625.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485196 reads in 294.619 CPU sec, 42.265 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000112, nseq: 485114
	[0000][ M::kt_pipeline] read 485114 sequences (70000112 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 195106, 2, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 858, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (1081.64, 971.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.34, 41.10)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1327, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (1396.73, 1117.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485218 reads in 307.744 CPU sec, 44.168 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000295, nseq: 485482
	[0000][ M::kt_pipeline] read 485482 sequences (70000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 195454, 3, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 880, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (905.02, 743.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.15, 41.16)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 944, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (1242.91, 797.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485114 reads in 289.812 CPU sec, 41.619 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000060, nseq: 486214
	[0000][ M::kt_pipeline] read 486214 sequences (70000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 195135, 2, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 710, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (1014.75, 957.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.75, 41.21)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1211, 2702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6450)
[0000][PE] mean and std.dev: (1732.55, 1423.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485482 reads in 292.061 CPU sec, 41.777 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000202, nseq: 485712
	[0000][ M::kt_pipeline] read 485712 sequences (70000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 486214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 195502, 5, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 627, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (656.81, 604.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.84, 41.23)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1160, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (1143.48, 642.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 486214 reads in 293.802 CPU sec, 42.026 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000093, nseq: 484428
	[0000][ M::kt_pipeline] read 484428 sequences (70000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 195688, 3, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 929, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (983.40, 764.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.75, 41.16)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 1031, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (1114.98, 870.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485712 reads in 293.355 CPU sec, 42.007 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 195203, 4, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (684, 1142, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1404.09, 1068.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.82, 41.15)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1227, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1541.27, 1033.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000097, nseq: 482402
	[0000][ M::kt_pipeline] read 482402 sequences (70000097 bp)...
	[0000][ M::mem_process_seqs] Processed 484428 reads in 305.157 CPU sec, 43.793 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000041, nseq: 482382
	[0000][ M::kt_pipeline] read 482382 sequences (70000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 194575, 4, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 681, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1029.59, 907.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.85, 41.26)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 1217, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1447.38, 1126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482402 reads in 289.450 CPU sec, 41.561 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000049, nseq: 481894
	[0000][ M::kt_pipeline] read 481894 sequences (70000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 194140, 4, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 808, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (929.23, 682.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.15, 41.25)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1032, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1258.76, 919.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482382 reads in 291.790 CPU sec, 41.773 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000291, nseq: 481830
	[0000][ M::kt_pipeline] read 481830 sequences (70000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 194105, 1, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 733, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (915.95, 713.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.29, 41.34)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1059, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (1409.88, 1229.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481894 reads in 292.859 CPU sec, 41.980 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 194044, 4, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 773, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (871.02, 718.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.23, 41.30)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (430, 1037, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3859)
[0000][PE] mean and std.dev: (1047.54, 775.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000271, nseq: 482348
	[0000][ M::kt_pipeline] read 482348 sequences (70000271 bp)...
	[0000][ M::mem_process_seqs] Processed 481830 reads in 300.806 CPU sec, 43.105 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000108, nseq: 481820
	[0000][ M::kt_pipeline] read 481820 sequences (70000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 194781, 1, 38)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 803, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (812.52, 869.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (342.89, 41.33)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 928, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (1005.20, 506.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482348 reads in 290.552 CPU sec, 41.752 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000295, nseq: 482236
	[0000][ M::kt_pipeline] read 482236 sequences (70000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 194757, 4, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 785, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1021.98, 985.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 341, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 497)
[0000][PE] mean and std.dev: (342.67, 41.19)
[0000][PE] low and high boundaries for proper pairs: (125, 559)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1060, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1242.98, 951.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481820 reads in 286.340 CPU sec, 41.106 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000103, nseq: 482080
	[0000][ M::kt_pipeline] read 482080 sequences (70000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 194837, 4, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 853, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (1081.52, 922.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.04, 41.28)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1110, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1304.52, 902.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482236 reads in 289.958 CPU sec, 41.614 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000049, nseq: 482256
	[0000][ M::kt_pipeline] read 482256 sequences (70000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 194863, 1, 61)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 668, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (937.32, 792.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.39, 41.27)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 977, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1140.79, 698.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482080 reads in 289.749 CPU sec, 41.556 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 194934, 0, 42)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 724, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (901.22, 785.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.20, 41.18)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1112, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5433)
[0000][PE] mean and std.dev: (1543.22, 1193.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000027, nseq: 483242
	[0000][ M::kt_pipeline] read 483242 sequences (70000027 bp)...
	[0000][ M::mem_process_seqs] Processed 482256 reads in 299.844 CPU sec, 42.999 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000165, nseq: 483520
	[0000][ M::kt_pipeline] read 483520 sequences (70000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 195042, 3, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (607, 995, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1069.54, 743.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.08, 41.15)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1006, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (986.26, 572.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483242 reads in 287.680 CPU sec, 41.236 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000090, nseq: 483458
	[0000][ M::kt_pipeline] read 483458 sequences (70000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 195410, 4, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 939, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1075.80, 910.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.19, 41.04)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1051, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (1086.56, 642.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483520 reads in 289.350 CPU sec, 41.537 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000279, nseq: 483774
	[0000][ M::kt_pipeline] read 483774 sequences (70000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 195302, 7, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 1038, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (919.16, 690.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.29, 41.21)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 923, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (944.02, 427.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483458 reads in 289.954 CPU sec, 41.480 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 195329, 4, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 809, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (904.75, 720.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.13, 41.21)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 996, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1079.62, 829.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000057, nseq: 483792
	[0000][ M::kt_pipeline] read 483792 sequences (70000057 bp)...
	[0000][ M::mem_process_seqs] Processed 483774 reads in 300.379 CPU sec, 43.149 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000002, nseq: 483530
	[0000][ M::kt_pipeline] read 483530 sequences (70000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 195326, 6, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 953, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (994.12, 665.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.41, 41.17)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 909, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (883.50, 602.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483792 reads in 288.373 CPU sec, 41.428 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000197, nseq: 483314
	[0000][ M::kt_pipeline] read 483314 sequences (70000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 195310, 5, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 798, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (1053.30, 918.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.43, 41.12)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 763, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1045.79, 789.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483530 reads in 288.965 CPU sec, 41.531 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000204, nseq: 483802
	[0000][ M::kt_pipeline] read 483802 sequences (70000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 195427, 1, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 911, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (900.85, 633.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.85, 41.16)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 930, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1025.76, 709.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483314 reads in 288.258 CPU sec, 41.247 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 195582, 2, 40)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1160, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (1093.23, 779.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.94, 41.23)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1220, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (1277.45, 717.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000209, nseq: 482914
	[0000][ M::kt_pipeline] read 482914 sequences (70000209 bp)...
	[0000][ M::mem_process_seqs] Processed 483802 reads in 296.697 CPU sec, 42.582 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000074, nseq: 482102
	[0000][ M::kt_pipeline] read 482102 sequences (70000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 195511, 3, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 991, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (879.69, 605.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.58, 41.10)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1112, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1343.63, 898.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482914 reads in 281.080 CPU sec, 40.325 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000142, nseq: 482384
	[0000][ M::kt_pipeline] read 482384 sequences (70000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 195081, 5, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 723, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1113.94, 1048.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.96, 41.15)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1094, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1351.96, 904.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482102 reads in 283.091 CPU sec, 40.609 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000272, nseq: 482248
	[0000][ M::kt_pipeline] read 482248 sequences (70000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 194724, 1, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1072, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1079.45, 867.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 499)
[0000][PE] mean and std.dev: (344.54, 41.22)
[0000][PE] low and high boundaries for proper pairs: (127, 561)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1272, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1410.82, 857.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482384 reads in 285.060 CPU sec, 40.831 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000051, nseq: 478664
	[0000][ M::kt_pipeline] read 478664 sequences (70000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 195075, 1, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 691, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (889.44, 696.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 499)
[0000][PE] mean and std.dev: (344.66, 41.15)
[0000][PE] low and high boundaries for proper pairs: (127, 561)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1108, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1248.37, 864.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482248 reads in 288.318 CPU sec, 41.462 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 193823, 11, 43)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 870, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (916.57, 835.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.19, 41.42)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (597, 925, 4486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12264)
[0000][PE] mean and std.dev: (2360.00, 2407.71)
[0000][PE] low and high boundaries for proper pairs: (1, 16153)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 960, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1126.33, 872.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000198, nseq: 477110
	[0000][ M::kt_pipeline] read 477110 sequences (70000198 bp)...
	[0000][ M::mem_process_seqs] Processed 478664 reads in 299.443 CPU sec, 43.003 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000161, nseq: 478020
	[0000][ M::kt_pipeline] read 478020 sequences (70000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 193018, 4, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 753, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (974.93, 865.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (183, 503)
[0000][PE] mean and std.dev: (343.44, 41.46)
[0000][PE] low and high boundaries for proper pairs: (119, 567)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 860, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (1003.82, 829.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477110 reads in 287.605 CPU sec, 41.364 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000116, nseq: 478218
	[0000][ M::kt_pipeline] read 478218 sequences (70000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 193843, 3, 44)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 691, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (834.90, 779.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.30, 41.34)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1225, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (1398.83, 875.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478020 reads in 308.561 CPU sec, 44.163 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000143, nseq: 477652
	[0000][ M::kt_pipeline] read 477652 sequences (70000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 193762, 3, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 654, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (818.74, 826.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.80, 41.32)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 944, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (937.57, 789.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478218 reads in 279.921 CPU sec, 40.167 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000068, nseq: 477312
	[0000][ M::kt_pipeline] read 477312 sequences (70000068 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 193418, 4, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 915, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5157)
[0000][PE] mean and std.dev: (1079.06, 970.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.40, 41.57)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1030, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1124.55, 774.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477652 reads in 325.023 CPU sec, 46.689 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000219, nseq: 477196
	[0000][ M::kt_pipeline] read 477196 sequences (70000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 193732, 6, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 934, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5394)
[0000][PE] mean and std.dev: (1127.90, 1056.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.58, 41.54)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1201, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (1591.11, 1378.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477312 reads in 327.761 CPU sec, 47.350 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000159, nseq: 477192
	[0000][ M::kt_pipeline] read 477192 sequences (70000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 193347, 6, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 848, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1245.18, 1171.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.86, 41.41)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (656, 1125, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (1108.27, 679.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477196 reads in 308.874 CPU sec, 44.413 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000225, nseq: 477076
	[0000][ M::kt_pipeline] read 477076 sequences (70000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 193406, 2, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (525, 1082, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (1296.80, 1099.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.94, 41.48)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1017, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1410.55, 1163.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477192 reads in 308.909 CPU sec, 44.357 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000147, nseq: 476754
	[0000][ M::kt_pipeline] read 476754 sequences (70000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 193098, 3, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 757, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (850.54, 745.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.98, 41.59)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1076, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1242.88, 824.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477076 reads in 317.507 CPU sec, 45.590 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000250, nseq: 476412
	[0000][ M::kt_pipeline] read 476412 sequences (70000250 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 192828, 4, 44)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 953, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5892)
[0000][PE] mean and std.dev: (1273.46, 1298.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.94, 41.58)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1176, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1377.14, 840.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476754 reads in 303.086 CPU sec, 43.454 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000000, nseq: 476762
	[0000][ M::kt_pipeline] read 476762 sequences (70000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 193219, 2, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 779, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (803.76, 681.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.71, 41.61)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1295, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4998)
[0000][PE] mean and std.dev: (1391.79, 1055.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476412 reads in 283.043 CPU sec, 40.642 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000238, nseq: 476678
	[0000][ M::kt_pipeline] read 476678 sequences (70000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 193434, 6, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 670, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (865.90, 749.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (345.15, 41.45)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1080, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1340.93, 1138.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476762 reads in 275.304 CPU sec, 39.557 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000057, nseq: 477150
	[0000][ M::kt_pipeline] read 477150 sequences (70000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 193293, 7, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 816, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (876.91, 593.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.33, 41.61)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 975, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (1046.90, 722.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476678 reads in 287.166 CPU sec, 41.268 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000197, nseq: 478058
	[0000][ M::kt_pipeline] read 478058 sequences (70000197 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 193636, 5, 43)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 708, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (783.53, 661.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (345.04, 41.47)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1543, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1612.63, 1188.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477150 reads in 299.014 CPU sec, 42.918 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000011, nseq: 477380
	[0000][ M::kt_pipeline] read 477380 sequences (70000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 193643, 4, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 905, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (960.00, 745.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.88, 41.58)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 998, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (1146.87, 879.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478058 reads in 283.065 CPU sec, 40.743 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000186, nseq: 478082
	[0000][ M::kt_pipeline] read 478082 sequences (70000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 193892, 4, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 987, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1046.09, 881.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.39, 41.52)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1269, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1311.81, 881.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477380 reads in 295.281 CPU sec, 42.483 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000185, nseq: 477442
	[0000][ M::kt_pipeline] read 477442 sequences (70000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 193648, 3, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 1035, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (1061.73, 754.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.34, 41.50)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1109, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (1102.09, 707.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478082 reads in 290.700 CPU sec, 41.711 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000188, nseq: 476682
	[0000][ M::kt_pipeline] read 476682 sequences (70000188 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 193214, 3, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 886, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (978.34, 798.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.42, 41.53)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1000, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (1031.80, 572.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477442 reads in 305.522 CPU sec, 43.944 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000277, nseq: 477058
	[0000][ M::kt_pipeline] read 477058 sequences (70000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 193209, 5, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 877, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (870.34, 623.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (345.17, 41.64)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 936, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (948.66, 591.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476682 reads in 294.010 CPU sec, 42.293 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000256, nseq: 477278
	[0000][ M::kt_pipeline] read 477278 sequences (70000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 193175, 6, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 862, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (1059.23, 726.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.35, 41.63)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1114, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1181.43, 842.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477058 reads in 279.079 CPU sec, 40.136 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000178, nseq: 476750
	[0000][ M::kt_pipeline] read 476750 sequences (70000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 193831, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 964, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (956.71, 814.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.44, 41.54)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 971, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (921.77, 502.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477278 reads in 267.856 CPU sec, 38.458 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000036, nseq: 476470
	[0000][ M::kt_pipeline] read 476470 sequences (70000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 193736, 5, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 756, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (948.23, 737.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.53, 41.53)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1120, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1196.41, 719.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476750 reads in 268.490 CPU sec, 38.521 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 193677, 6, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 981, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (1105.62, 1028.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.34, 41.56)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 967, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5730)
[0000][PE] mean and std.dev: (1217.72, 952.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000177, nseq: 476622
	[0000][ M::kt_pipeline] read 476622 sequences (70000177 bp)...
	[0000][ M::mem_process_seqs] Processed 476470 reads in 283.377 CPU sec, 40.668 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000032, nseq: 476360
	[0000][ M::kt_pipeline] read 476360 sequences (70000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 194077, 6, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 1071, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (1273.08, 1121.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.42, 41.40)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1063, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (1058.67, 651.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476622 reads in 270.591 CPU sec, 38.804 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000119, nseq: 476422
	[0000][ M::kt_pipeline] read 476422 sequences (70000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 193720, 3, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 720, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (903.63, 802.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.26, 41.55)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1096, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1306.87, 985.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476360 reads in 267.549 CPU sec, 38.398 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000122, nseq: 476190
	[0000][ M::kt_pipeline] read 476190 sequences (70000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 193975, 4, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 790, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4931)
[0000][PE] mean and std.dev: (1219.34, 1219.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.49, 41.58)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1360, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (1614.75, 1221.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476422 reads in 266.535 CPU sec, 38.219 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 193431, 3, 44)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 741, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (902.06, 770.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.97, 41.48)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1091, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (1069.10, 616.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000182, nseq: 476908
	[0000][ M::kt_pipeline] read 476908 sequences (70000182 bp)...
	[0000][ M::mem_process_seqs] Processed 476190 reads in 279.578 CPU sec, 40.226 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000042, nseq: 477166
	[0000][ M::kt_pipeline] read 477166 sequences (70000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 193977, 3, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 898, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (985.41, 793.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.54, 41.46)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1074, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (1142.56, 751.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476908 reads in 264.953 CPU sec, 37.964 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000038, nseq: 476386
	[0000][ M::kt_pipeline] read 476386 sequences (70000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 194106, 2, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 879, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1066.54, 960.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (345.02, 41.44)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1183, 2917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7019)
[0000][PE] mean and std.dev: (1880.43, 1637.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477166 reads in 270.405 CPU sec, 38.784 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000010, nseq: 476728
	[0000][ M::kt_pipeline] read 476728 sequences (70000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 193779, 11, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (517, 761, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (1020.70, 829.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (345.15, 41.51)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1405, 2126, 3233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6889)
[0000][PE] mean and std.dev: (2121.50, 1731.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9048)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1118, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (1127.41, 541.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476386 reads in 274.594 CPU sec, 39.424 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000281, nseq: 476820
	[0000][ M::kt_pipeline] read 476820 sequences (70000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 193853, 5, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (637, 1150, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1224.79, 1002.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.15, 41.54)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1157, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (1553.46, 1260.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476728 reads in 263.120 CPU sec, 37.746 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 194177, 5, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 942, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1103.41, 913.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (345.21, 41.50)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1068, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1196.14, 910.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000063, nseq: 477268
	[0000][ M::kt_pipeline] read 477268 sequences (70000063 bp)...
	[0000][ M::mem_process_seqs] Processed 476820 reads in 289.044 CPU sec, 41.370 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000221, nseq: 476730
	[0000][ M::kt_pipeline] read 476730 sequences (70000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 193773, 7, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 938, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4955)
[0000][PE] mean and std.dev: (1314.00, 1210.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (345.28, 41.47)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 973, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1233.43, 893.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477268 reads in 292.645 CPU sec, 41.962 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000187, nseq: 477264
	[0000][ M::kt_pipeline] read 477264 sequences (70000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 193742, 7, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 887, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (934.68, 780.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.54, 41.51)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 996, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1025.92, 634.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476730 reads in 276.750 CPU sec, 39.782 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000141, nseq: 480940
	[0000][ M::kt_pipeline] read 480940 sequences (70000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 193380, 5, 42)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 679, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (718.78, 581.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.53, 41.58)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1180, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1344.74, 869.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477264 reads in 311.309 CPU sec, 44.601 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000093, nseq: 477378
	[0000][ M::kt_pipeline] read 477378 sequences (70000093 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 195268, 1, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 751, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (1031.85, 795.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.38, 41.48)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (460, 945, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (993.34, 650.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480940 reads in 319.559 CPU sec, 45.825 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000162, nseq: 477406
	[0000][ M::kt_pipeline] read 477406 sequences (70000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 193834, 5, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 795, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1035.58, 914.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.62, 41.52)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1067, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (1132.34, 731.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477378 reads in 262.572 CPU sec, 37.647 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000227, nseq: 477378
	[0000][ M::kt_pipeline] read 477378 sequences (70000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 193989, 3, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 825, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (832.70, 688.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 503)
[0000][PE] mean and std.dev: (345.65, 41.52)
[0000][PE] low and high boundaries for proper pairs: (125, 566)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (432, 1057, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1262.26, 1111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477406 reads in 262.265 CPU sec, 37.595 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000267, nseq: 476622
	[0000][ M::kt_pipeline] read 476622 sequences (70000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 194197, 8, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 712, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (889.28, 789.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 505)
[0000][PE] mean and std.dev: (345.47, 41.51)
[0000][PE] low and high boundaries for proper pairs: (121, 569)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 970, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1187.00, 799.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477378 reads in 260.694 CPU sec, 37.330 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 193808, 4, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 915, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (1175.68, 1081.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 503)
[0000][PE] mean and std.dev: (345.73, 41.55)
[0000][PE] low and high boundaries for proper pairs: (125, 566)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1041, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (994.53, 650.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000261, nseq: 476850
	[0000][ M::kt_pipeline] read 476850 sequences (70000261 bp)...
	[0000][ M::mem_process_seqs] Processed 476622 reads in 269.321 CPU sec, 38.581 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000281, nseq: 477026
	[0000][ M::kt_pipeline] read 477026 sequences (70000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 476850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 193488, 5, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 777, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (996.98, 839.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 503)
[0000][PE] mean and std.dev: (345.70, 41.58)
[0000][PE] low and high boundaries for proper pairs: (125, 566)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1049, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1209.24, 731.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 476850 reads in 258.206 CPU sec, 37.062 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000021, nseq: 478094
	[0000][ M::kt_pipeline] read 478094 sequences (70000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 477026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 193940, 3, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 940, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1071.55, 922.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 503)
[0000][PE] mean and std.dev: (345.73, 41.54)
[0000][PE] low and high boundaries for proper pairs: (125, 566)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 950, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (1022.24, 611.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 477026 reads in 254.090 CPU sec, 36.349 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000065, nseq: 485944
	[0000][ M::kt_pipeline] read 485944 sequences (70000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 194267, 7, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 702, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (863.75, 722.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 345, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 503)
[0000][PE] mean and std.dev: (345.77, 41.60)
[0000][PE] low and high boundaries for proper pairs: (125, 566)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1090, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1265.98, 823.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478094 reads in 260.170 CPU sec, 37.148 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000247, nseq: 485890
	[0000][ M::kt_pipeline] read 485890 sequences (70000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 197071, 4, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (510, 826, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3879)
[0000][PE] mean and std.dev: (1084.60, 860.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.39, 41.13)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1124, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1085.16, 611.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485944 reads in 263.004 CPU sec, 37.692 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 197405, 4, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 729, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (772.63, 600.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.07, 41.27)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1001, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (1053.80, 605.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000050, nseq: 484548
	[0000][ M::kt_pipeline] read 484548 sequences (70000050 bp)...
	[0000][ M::mem_process_seqs] Processed 485890 reads in 273.731 CPU sec, 39.164 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000261, nseq: 484086
	[0000][ M::kt_pipeline] read 484086 sequences (70000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 196874, 4, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (538, 833, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6031)
[0000][PE] mean and std.dev: (1432.23, 1423.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.55, 41.18)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 964, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1275.51, 987.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484548 reads in 259.760 CPU sec, 37.201 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000228, nseq: 483988
	[0000][ M::kt_pipeline] read 483988 sequences (70000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 197043, 6, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 1200, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6614)
[0000][PE] mean and std.dev: (1460.30, 1416.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.96, 41.12)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1122, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (1045.84, 619.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484086 reads in 260.664 CPU sec, 37.336 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000285, nseq: 483426
	[0000][ M::kt_pipeline] read 483426 sequences (70000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 196517, 7, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 788, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (992.53, 864.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.64, 41.12)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1199, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1612.89, 1434.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483988 reads in 262.620 CPU sec, 37.585 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 196588, 5, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 739, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (773.41, 642.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.84, 41.14)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1205, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4792)
[0000][PE] mean and std.dev: (1386.52, 959.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000283, nseq: 484172
	[0000][ M::kt_pipeline] read 484172 sequences (70000283 bp)...
	[0000][ M::mem_process_seqs] Processed 483426 reads in 269.570 CPU sec, 38.587 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000067, nseq: 483034
	[0000][ M::kt_pipeline] read 483034 sequences (70000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 196978, 1, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 1137, 2710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7020)
[0000][PE] mean and std.dev: (1609.36, 1383.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.87, 41.22)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1067, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3075)
[0000][PE] mean and std.dev: (1014.15, 561.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484172 reads in 256.801 CPU sec, 36.769 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000168, nseq: 482964
	[0000][ M::kt_pipeline] read 482964 sequences (70000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 196106, 5, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 874, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1132.19, 914.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.94, 41.22)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1030, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (1301.47, 1004.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483034 reads in 260.217 CPU sec, 37.136 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000223, nseq: 483306
	[0000][ M::kt_pipeline] read 483306 sequences (70000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 196438, 6, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (539, 727, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1072.87, 918.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.11, 41.20)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1148, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (1151.56, 759.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482964 reads in 261.123 CPU sec, 37.359 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 196382, 3, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 1052, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4584)
[0000][PE] mean and std.dev: (1333.44, 1063.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.13, 41.20)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1027, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1336.94, 1078.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000035, nseq: 482900
	[0000][ M::kt_pipeline] read 482900 sequences (70000035 bp)...
	[0000][ M::mem_process_seqs] Processed 483306 reads in 267.023 CPU sec, 38.220 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000004, nseq: 482662
	[0000][ M::kt_pipeline] read 482662 sequences (70000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 196148, 4, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 905, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (858.20, 664.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.93, 41.28)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1053, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (1171.75, 780.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482900 reads in 257.538 CPU sec, 36.797 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000274, nseq: 482852
	[0000][ M::kt_pipeline] read 482852 sequences (70000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 196024, 4, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 830, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (884.22, 722.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.01, 41.13)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1210, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1359.13, 854.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482662 reads in 260.947 CPU sec, 37.244 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000213, nseq: 483482
	[0000][ M::kt_pipeline] read 483482 sequences (70000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 196228, 4, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 739, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (889.12, 738.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 499)
[0000][PE] mean and std.dev: (344.36, 41.09)
[0000][PE] low and high boundaries for proper pairs: (127, 561)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1080, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (1113.71, 595.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482852 reads in 257.862 CPU sec, 36.893 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000059, nseq: 483520
	[0000][ M::kt_pipeline] read 483520 sequences (70000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 196552, 3, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 932, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (1111.85, 935.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.13, 41.18)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 976, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1280.59, 1089.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483482 reads in 253.759 CPU sec, 36.284 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 196620, 3, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 690, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (806.62, 651.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.84, 41.19)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1018, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5066)
[0000][PE] mean and std.dev: (1343.05, 1066.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000216, nseq: 484264
	[0000][ M::kt_pipeline] read 484264 sequences (70000216 bp)...
	[0000][ M::mem_process_seqs] Processed 483520 reads in 268.032 CPU sec, 38.359 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000248, nseq: 485408
	[0000][ M::kt_pipeline] read 485408 sequences (70000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 197032, 3, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 857, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (948.53, 727.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.01, 41.07)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 1133, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4796)
[0000][PE] mean and std.dev: (1219.44, 935.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484264 reads in 259.230 CPU sec, 37.043 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000227, nseq: 482818
	[0000][ M::kt_pipeline] read 482818 sequences (70000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 197415, 1, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 956, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5194)
[0000][PE] mean and std.dev: (1243.23, 1133.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.16, 41.19)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1088, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (1240.67, 737.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485408 reads in 257.164 CPU sec, 36.853 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000110, nseq: 483990
	[0000][ M::kt_pipeline] read 483990 sequences (70000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 196926, 3, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (655, 1044, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5959)
[0000][PE] mean and std.dev: (1583.09, 1400.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.19, 41.16)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1060, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (1011.71, 633.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482818 reads in 250.944 CPU sec, 35.832 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 196844, 4, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 807, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (800.98, 648.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.95, 41.06)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1170, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1380.57, 997.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000146, nseq: 484184
	[0000][ M::kt_pipeline] read 484184 sequences (70000146 bp)...
	[0000][ M::mem_process_seqs] Processed 483990 reads in 266.268 CPU sec, 38.006 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000120, nseq: 485926
	[0000][ M::kt_pipeline] read 485926 sequences (70000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 196862, 4, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 786, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (949.88, 810.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.64, 41.10)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1149, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1335.47, 954.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484184 reads in 256.417 CPU sec, 36.584 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000187, nseq: 485322
	[0000][ M::kt_pipeline] read 485322 sequences (70000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197642, 4, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 881, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1100.42, 1103.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 341, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 497)
[0000][PE] mean and std.dev: (342.72, 41.13)
[0000][PE] low and high boundaries for proper pairs: (125, 559)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 903, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (997.17, 758.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485926 reads in 258.074 CPU sec, 36.873 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000256, nseq: 483016
	[0000][ M::kt_pipeline] read 483016 sequences (70000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 197565, 2, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 829, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (905.65, 862.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 341, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (342.76, 41.23)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 913, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (981.20, 638.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485322 reads in 252.253 CPU sec, 35.983 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000042, nseq: 483620
	[0000][ M::kt_pipeline] read 483620 sequences (70000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 196626, 6, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 885, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (955.32, 720.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.31, 41.13)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 972, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (1147.84, 797.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483016 reads in 252.808 CPU sec, 36.046 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 196560, 6, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 829, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (775.67, 593.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.92, 41.13)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1155, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1293.89, 924.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000132, nseq: 483504
	[0000][ M::kt_pipeline] read 483504 sequences (70000132 bp)...
	[0000][ M::mem_process_seqs] Processed 483620 reads in 268.883 CPU sec, 38.363 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000188, nseq: 483446
	[0000][ M::kt_pipeline] read 483446 sequences (70000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 196810, 4, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 961, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (910.22, 735.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.55, 41.26)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 906, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (908.52, 541.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483504 reads in 254.492 CPU sec, 36.402 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000276, nseq: 483662
	[0000][ M::kt_pipeline] read 483662 sequences (70000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 196854, 3, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 896, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (940.24, 698.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.87, 41.25)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 972, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1019.26, 636.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483446 reads in 254.462 CPU sec, 36.316 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000062, nseq: 482586
	[0000][ M::kt_pipeline] read 482586 sequences (70000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 196690, 6, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (577, 985, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1244.55, 1091.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.82, 41.12)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1110, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1387.64, 964.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483662 reads in 252.290 CPU sec, 36.064 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 196716, 5, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 847, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2580)
[0000][PE] mean and std.dev: (797.12, 542.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.02, 41.19)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 1063, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (1152.80, 721.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000046, nseq: 482686
	[0000][ M::kt_pipeline] read 482686 sequences (70000046 bp)...
	[0000][ M::mem_process_seqs] Processed 482586 reads in 262.745 CPU sec, 37.457 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000130, nseq: 483600
	[0000][ M::kt_pipeline] read 483600 sequences (70000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 196636, 5, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 952, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1109.32, 972.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.19, 41.26)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1269, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5115)
[0000][PE] mean and std.dev: (1482.16, 1020.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482686 reads in 254.890 CPU sec, 36.465 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000274, nseq: 482394
	[0000][ M::kt_pipeline] read 482394 sequences (70000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 196927, 4, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 836, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (831.89, 607.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.86, 41.14)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1371, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6223)
[0000][PE] mean and std.dev: (1654.57, 1109.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483600 reads in 256.433 CPU sec, 36.668 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000108, nseq: 482010
	[0000][ M::kt_pipeline] read 482010 sequences (70000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 196603, 5, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 974, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (1145.83, 999.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.94, 41.15)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1235, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1317.83, 922.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482394 reads in 253.658 CPU sec, 36.284 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 196466, 1, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 699, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (821.45, 710.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.67, 41.24)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1170, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4969)
[0000][PE] mean and std.dev: (1372.37, 1074.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000036, nseq: 482174
	[0000][ M::kt_pipeline] read 482174 sequences (70000036 bp)...
	[0000][ M::mem_process_seqs] Processed 482010 reads in 262.263 CPU sec, 37.462 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000063, nseq: 482480
	[0000][ M::kt_pipeline] read 482480 sequences (70000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 196466, 4, 61)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 924, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (844.66, 663.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.00, 41.15)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1186, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (1315.32, 1026.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482174 reads in 250.645 CPU sec, 35.782 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000220, nseq: 482936
	[0000][ M::kt_pipeline] read 482936 sequences (70000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 197019, 4, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (622, 981, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (972.52, 624.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.08, 41.10)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1198, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1470.69, 1176.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482480 reads in 251.619 CPU sec, 35.877 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000205, nseq: 482932
	[0000][ M::kt_pipeline] read 482932 sequences (70000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 197008, 3, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 917, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1299.45, 1179.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.06, 41.23)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1166, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (1358.88, 836.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482936 reads in 257.729 CPU sec, 36.839 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000046, nseq: 484064
	[0000][ M::kt_pipeline] read 484064 sequences (70000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 196957, 5, 44)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 972, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6269)
[0000][PE] mean and std.dev: (1268.67, 1235.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.02, 41.15)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1206, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (1281.42, 720.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482932 reads in 255.555 CPU sec, 36.409 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 197475, 3, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 807, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (762.54, 642.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.17, 41.14)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (585, 1057, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (1054.52, 741.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000127, nseq: 482898
	[0000][ M::kt_pipeline] read 482898 sequences (70000127 bp)...
	[0000][ M::mem_process_seqs] Processed 484064 reads in 263.010 CPU sec, 37.573 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000291, nseq: 483216
	[0000][ M::kt_pipeline] read 483216 sequences (70000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 196871, 1, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 757, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (761.04, 599.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.14, 41.12)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1264, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1484.31, 947.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482898 reads in 249.298 CPU sec, 35.642 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000193, nseq: 483718
	[0000][ M::kt_pipeline] read 483718 sequences (70000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 196731, 3, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 1022, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1135.25, 939.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.95, 41.07)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 988, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1263.03, 845.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483216 reads in 250.402 CPU sec, 35.748 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000127, nseq: 484780
	[0000][ M::kt_pipeline] read 484780 sequences (70000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 197170, 3, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 922, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1195.85, 1042.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.07, 41.31)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1057, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (1127.02, 627.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483718 reads in 252.481 CPU sec, 35.957 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000174, nseq: 484712
	[0000][ M::kt_pipeline] read 484712 sequences (70000174 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 197169, 2, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 624, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (696.84, 583.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.78, 41.27)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1097, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (1139.30, 706.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484780 reads in 274.625 CPU sec, 39.197 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000198, nseq: 484712
	[0000][ M::kt_pipeline] read 484712 sequences (70000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 197452, 4, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 819, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1140.37, 1151.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.66, 41.16)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1048, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (1095.05, 597.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484712 reads in 273.077 CPU sec, 39.020 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000202, nseq: 484836
	[0000][ M::kt_pipeline] read 484836 sequences (70000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 197674, 3, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 939, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (954.75, 669.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.96, 41.26)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 1126, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1181.83, 864.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484712 reads in 257.972 CPU sec, 36.827 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000071, nseq: 484090
	[0000][ M::kt_pipeline] read 484090 sequences (70000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 197403, 3, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 715, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (820.20, 627.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.92, 41.16)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1270, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1520.84, 1136.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484836 reads in 262.614 CPU sec, 37.464 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000136, nseq: 485806
	[0000][ M::kt_pipeline] read 485806 sequences (70000136 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 197505, 10, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 798, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (934.33, 810.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.46, 41.09)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1030, 2500, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5623)
[0000][PE] mean and std.dev: (1654.78, 970.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7154)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1047, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (1096.44, 663.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484090 reads in 272.816 CPU sec, 39.001 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000165, nseq: 485170
	[0000][ M::kt_pipeline] read 485170 sequences (70000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 197929, 2, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 756, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (1025.58, 956.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.55, 41.11)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1092, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (1370.24, 941.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485806 reads in 261.121 CPU sec, 37.228 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000154, nseq: 483464
	[0000][ M::kt_pipeline] read 483464 sequences (70000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 197990, 0, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (553, 997, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1437.95, 1323.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.18, 41.26)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1066, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1292.85, 928.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485170 reads in 260.811 CPU sec, 37.239 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000242, nseq: 483464
	[0000][ M::kt_pipeline] read 483464 sequences (70000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 196952, 4, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 743, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (757.80, 555.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.85, 41.18)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1037, 4117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10825)
[0000][PE] mean and std.dev: (2156.20, 2236.10)
[0000][PE] low and high boundaries for proper pairs: (1, 14179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483464 reads in 276.547 CPU sec, 39.542 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000168, nseq: 483388
	[0000][ M::kt_pipeline] read 483388 sequences (70000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 197400, 4, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 856, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (912.54, 700.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.72, 41.26)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1239, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (1221.90, 820.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483464 reads in 261.354 CPU sec, 37.319 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197137, 4, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 665, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (776.37, 607.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.62, 41.26)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1155, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5411)
[0000][PE] mean and std.dev: (1371.94, 1083.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000059, nseq: 482522
	[0000][ M::kt_pipeline] read 482522 sequences (70000059 bp)...
	[0000][ M::mem_process_seqs] Processed 483388 reads in 259.761 CPU sec, 37.067 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000275, nseq: 482728
	[0000][ M::kt_pipeline] read 482728 sequences (70000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 196279, 5, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (650, 979, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3536)
[0000][PE] mean and std.dev: (1064.61, 681.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.76, 41.25)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 920, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (941.00, 576.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482522 reads in 263.720 CPU sec, 37.665 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000194, nseq: 485384
	[0000][ M::kt_pipeline] read 485384 sequences (70000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 196885, 5, 40)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 993, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (1104.15, 799.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.90, 41.27)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 924, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (1047.19, 638.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482728 reads in 270.745 CPU sec, 38.578 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000029, nseq: 484712
	[0000][ M::kt_pipeline] read 484712 sequences (70000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 197980, 4, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 903, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (900.66, 682.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 499)
[0000][PE] mean and std.dev: (344.27, 41.09)
[0000][PE] low and high boundaries for proper pairs: (127, 561)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 875, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (1057.81, 800.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485384 reads in 280.364 CPU sec, 40.057 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000175, nseq: 483930
	[0000][ M::kt_pipeline] read 483930 sequences (70000175 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 197842, 7, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 867, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (988.66, 773.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.68, 41.14)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1104, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (1263.48, 964.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484712 reads in 290.949 CPU sec, 41.577 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000090, nseq: 484280
	[0000][ M::kt_pipeline] read 484280 sequences (70000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 197450, 3, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 786, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (945.87, 800.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.93, 41.08)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1104, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2585)
[0000][PE] mean and std.dev: (1033.28, 403.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483930 reads in 259.601 CPU sec, 37.073 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000047, nseq: 483030
	[0000][ M::kt_pipeline] read 483030 sequences (70000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 197813, 6, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (566, 946, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1094.40, 835.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.15, 41.15)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (698, 981, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (1163.88, 721.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484280 reads in 252.118 CPU sec, 35.972 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000082, nseq: 482874
	[0000][ M::kt_pipeline] read 482874 sequences (70000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 197127, 3, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 847, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (970.02, 800.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.26, 41.29)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 937, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (1021.59, 681.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483030 reads in 267.923 CPU sec, 38.241 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000203, nseq: 483926
	[0000][ M::kt_pipeline] read 483926 sequences (70000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 196914, 2, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 684, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (963.96, 870.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 499)
[0000][PE] mean and std.dev: (344.29, 41.12)
[0000][PE] low and high boundaries for proper pairs: (127, 561)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1227, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (1246.03, 728.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482874 reads in 270.715 CPU sec, 38.608 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000019, nseq: 483216
	[0000][ M::kt_pipeline] read 483216 sequences (70000019 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 197485, 6, 43)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (544, 868, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (816.84, 498.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 499)
[0000][PE] mean and std.dev: (344.35, 41.13)
[0000][PE] low and high boundaries for proper pairs: (127, 561)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1160, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1210.90, 740.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483926 reads in 274.343 CPU sec, 39.157 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000003, nseq: 483322
	[0000][ M::kt_pipeline] read 483322 sequences (70000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 197340, 4, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (486, 876, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (852.74, 631.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.63, 41.13)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1182, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5330)
[0000][PE] mean and std.dev: (1523.56, 1147.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483216 reads in 251.102 CPU sec, 35.903 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000109, nseq: 482812
	[0000][ M::kt_pipeline] read 482812 sequences (70000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 197518, 4, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 650, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3569)
[0000][PE] mean and std.dev: (885.44, 766.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.58, 41.13)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1304, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (1373.27, 886.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483322 reads in 248.644 CPU sec, 35.479 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000066, nseq: 482952
	[0000][ M::kt_pipeline] read 482952 sequences (70000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 197392, 4, 39)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (516, 844, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (1059.71, 874.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.77, 41.20)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1039, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (992.64, 583.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482812 reads in 245.222 CPU sec, 35.089 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 197267, 6, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 1026, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (1306.77, 1113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.80, 41.10)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1125, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5575)
[0000][PE] mean and std.dev: (1561.41, 1208.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000238, nseq: 483472
	[0000][ M::kt_pipeline] read 483472 sequences (70000238 bp)...
	[0000][ M::mem_process_seqs] Processed 482952 reads in 255.984 CPU sec, 36.532 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000194, nseq: 483406
	[0000][ M::kt_pipeline] read 483406 sequences (70000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 197630, 4, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (551, 932, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (873.44, 464.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.39, 41.06)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1031, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (904.62, 480.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483472 reads in 252.861 CPU sec, 36.169 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000085, nseq: 483522
	[0000][ M::kt_pipeline] read 483522 sequences (70000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 197226, 4, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 582, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (699.28, 569.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 500)
[0000][PE] mean and std.dev: (343.29, 41.09)
[0000][PE] low and high boundaries for proper pairs: (122, 563)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1061, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (1167.20, 734.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483406 reads in 248.650 CPU sec, 35.505 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000272, nseq: 482268
	[0000][ M::kt_pipeline] read 482268 sequences (70000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 197537, 6, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 1034, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1146.77, 900.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.91, 41.24)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 820, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (934.18, 632.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483522 reads in 247.009 CPU sec, 35.294 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 197073, 6, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 840, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (1038.38, 903.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000] read_chunk: 70000000, work_chunk_size: 70000189, nseq: 482008
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.58, 41.21)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (656, 1099, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1199.60, 814.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 482008 sequences (70000189 bp)...
	[0000][ M::mem_process_seqs] Processed 482268 reads in 259.741 CPU sec, 37.135 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000277, nseq: 482092
	[0000][ M::kt_pipeline] read 482092 sequences (70000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 196484, 4, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1012, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1067.64, 941.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 499)
[0000][PE] mean and std.dev: (344.57, 41.16)
[0000][PE] low and high boundaries for proper pairs: (127, 561)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1267, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1440.04, 998.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482008 reads in 251.387 CPU sec, 35.939 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000030, nseq: 482532
	[0000][ M::kt_pipeline] read 482532 sequences (70000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 197053, 5, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (486, 723, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1061.20, 915.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 504)
[0000][PE] mean and std.dev: (344.54, 41.28)
[0000][PE] low and high boundaries for proper pairs: (120, 568)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1162, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1192.66, 812.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482092 reads in 244.703 CPU sec, 34.945 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000251, nseq: 482440
	[0000][ M::kt_pipeline] read 482440 sequences (70000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 197269, 5, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (729, 1023, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (1082.31, 600.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 344, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 502)
[0000][PE] mean and std.dev: (344.65, 41.15)
[0000][PE] low and high boundaries for proper pairs: (124, 565)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1145, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1222.88, 796.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482532 reads in 243.111 CPU sec, 34.724 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000010, nseq: 482832
	[0000][ M::kt_pipeline] read 482832 sequences (70000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 197192, 4, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 804, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4729)
[0000][PE] mean and std.dev: (1035.43, 985.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.37, 41.26)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1006, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1239.53, 843.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482440 reads in 250.254 CPU sec, 35.814 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 197522, 4, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 707, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (954.64, 794.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.38, 41.19)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 999, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (1203.88, 847.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000121, nseq: 484012
	[0000][ M::kt_pipeline] read 484012 sequences (70000121 bp)...
	[0000][ M::mem_process_seqs] Processed 482832 reads in 262.861 CPU sec, 37.501 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000141, nseq: 483164
	[0000][ M::kt_pipeline] read 483164 sequences (70000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 197450, 3, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 803, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (1186.94, 1135.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 342, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.49, 41.07)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1040, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (1029.66, 676.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484012 reads in 246.076 CPU sec, 35.083 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000024, nseq: 484274
	[0000][ M::kt_pipeline] read 484274 sequences (70000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 197480, 4, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 950, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (1232.08, 990.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 498)
[0000][PE] mean and std.dev: (343.78, 40.97)
[0000][PE] low and high boundaries for proper pairs: (126, 560)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1221, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (1338.40, 883.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483164 reads in 246.210 CPU sec, 35.031 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000269, nseq: 482660
	[0000][ M::kt_pipeline] read 482660 sequences (70000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 197687, 4, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 984, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (926.53, 664.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (343.87, 41.09)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1184, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (1342.89, 1032.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484274 reads in 253.168 CPU sec, 36.212 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 197064, 4, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 941, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1217.92, 1158.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.15, 41.12)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1010, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1246.37, 798.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000244, nseq: 483076
	[0000][ M::kt_pipeline] read 483076 sequences (70000244 bp)...
	[0000][ M::mem_process_seqs] Processed 482660 reads in 260.948 CPU sec, 37.206 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000128, nseq: 484014
	[0000][ M::kt_pipeline] read 484014 sequences (70000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 197389, 3, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (542, 936, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (905.93, 578.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 343, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.09, 41.04)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1129, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5232)
[0000][PE] mean and std.dev: (1425.78, 1079.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483076 reads in 246.548 CPU sec, 35.266 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000243, nseq: 481148
	[0000][ M::kt_pipeline] read 481148 sequences (70000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 196931, 6, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 777, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (884.05, 680.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 344, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 501)
[0000][PE] mean and std.dev: (344.35, 41.18)
[0000][PE] low and high boundaries for proper pairs: (123, 564)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 962, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1190.76, 973.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484014 reads in 251.403 CPU sec, 35.830 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000285, nseq: 480060
	[0000][ M::kt_pipeline] read 480060 sequences (70000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 196869, 4, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 886, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4440)
[0000][PE] mean and std.dev: (1040.49, 926.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (292, 318, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 451)
[0000][PE] mean and std.dev: (319.92, 38.33)
[0000][PE] low and high boundaries for proper pairs: (133, 504)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1033, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (1062.89, 546.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481148 reads in 249.045 CPU sec, 35.540 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 196142, 7, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 972, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1038.68, 998.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 435)
[0000][PE] mean and std.dev: (309.89, 32.23)
[0000][PE] low and high boundaries for proper pairs: (135, 485)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1017, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3420)
[0000][PE] mean and std.dev: (1123.80, 710.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000242, nseq: 479792
	[0000][ M::kt_pipeline] read 479792 sequences (70000242 bp)...
	[0000][ M::mem_process_seqs] Processed 480060 reads in 255.961 CPU sec, 36.662 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000172, nseq: 479922
	[0000][ M::kt_pipeline] read 479922 sequences (70000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 196741, 3, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 758, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (986.17, 824.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.02, 32.13)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1026, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (1029.10, 679.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479792 reads in 242.826 CPU sec, 34.672 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000147, nseq: 479384
	[0000][ M::kt_pipeline] read 479384 sequences (70000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 195793, 5, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 991, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (964.51, 868.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 435)
[0000][PE] mean and std.dev: (309.84, 32.22)
[0000][PE] low and high boundaries for proper pairs: (135, 485)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1148, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1179.83, 768.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479922 reads in 251.864 CPU sec, 35.957 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000102, nseq: 479458
	[0000][ M::kt_pipeline] read 479458 sequences (70000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 196383, 4, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 818, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1043.45, 912.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 435)
[0000][PE] mean and std.dev: (309.83, 32.20)
[0000][PE] low and high boundaries for proper pairs: (135, 485)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 954, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1235.13, 1010.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479384 reads in 244.633 CPU sec, 34.996 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000199, nseq: 479282
	[0000][ M::kt_pipeline] read 479282 sequences (70000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 196219, 3, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (682, 1162, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1200.74, 852.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.02, 32.18)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1023, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (1031.39, 506.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479458 reads in 241.764 CPU sec, 34.436 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000149, nseq: 480044
	[0000][ M::kt_pipeline] read 480044 sequences (70000149 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 196087, 1, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 794, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (977.81, 845.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.78, 32.14)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1219, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (1194.92, 696.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479282 reads in 256.671 CPU sec, 36.635 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000209, nseq: 479680
	[0000][ M::kt_pipeline] read 479680 sequences (70000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 196412, 1, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (670, 858, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (968.47, 582.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.87, 32.05)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 984, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (1045.59, 650.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480044 reads in 249.003 CPU sec, 35.552 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000100, nseq: 479756
	[0000][ M::kt_pipeline] read 479756 sequences (70000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 196457, 1, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (515, 1082, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4952)
[0000][PE] mean and std.dev: (1340.65, 1165.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.70, 32.09)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1052, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (1014.94, 684.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479680 reads in 245.447 CPU sec, 35.103 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000276, nseq: 479748
	[0000][ M::kt_pipeline] read 479748 sequences (70000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 196430, 5, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 895, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (892.00, 742.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 435)
[0000][PE] mean and std.dev: (309.85, 32.11)
[0000][PE] low and high boundaries for proper pairs: (135, 485)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1209, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1246.33, 781.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479756 reads in 243.516 CPU sec, 34.824 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 196733, 2, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 927, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (952.51, 819.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (190, 430)
[0000][PE] mean and std.dev: (309.87, 32.00)
[0000][PE] low and high boundaries for proper pairs: (142, 478)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1056, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (1203.46, 814.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000086, nseq: 479658
	[0000][ M::kt_pipeline] read 479658 sequences (70000086 bp)...
	[0000][ M::mem_process_seqs] Processed 479748 reads in 256.933 CPU sec, 36.682 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000105, nseq: 479632
	[0000][ M::kt_pipeline] read 479632 sequences (70000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 196791, 4, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 900, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (839.37, 632.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.51, 32.04)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1009, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (997.40, 606.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479658 reads in 250.222 CPU sec, 35.729 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000159, nseq: 480748
	[0000][ M::kt_pipeline] read 480748 sequences (70000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 196749, 2, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 993, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1058.23, 806.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.40, 32.14)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 842, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (967.31, 702.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479632 reads in 243.311 CPU sec, 34.739 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000205, nseq: 481276
	[0000][ M::kt_pipeline] read 481276 sequences (70000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 196746, 3, 62)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 807, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (791.34, 541.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.78, 32.01)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1200, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (1160.67, 630.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480748 reads in 241.969 CPU sec, 34.477 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000109, nseq: 482784
	[0000][ M::kt_pipeline] read 482784 sequences (70000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197628, 6, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (541, 985, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (1113.84, 767.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.48, 32.09)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1098, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (1241.96, 668.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481276 reads in 248.031 CPU sec, 35.494 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000157, nseq: 482426
	[0000][ M::kt_pipeline] read 482426 sequences (70000157 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 197908, 1, 66)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 762, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (994.72, 950.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.65, 32.03)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1041, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (1192.38, 663.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482784 reads in 259.273 CPU sec, 36.979 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000145, nseq: 483530
	[0000][ M::kt_pipeline] read 483530 sequences (70000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 197594, 2, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (589, 977, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (1000.95, 698.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.73, 32.03)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 897, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1058.69, 651.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482426 reads in 244.435 CPU sec, 34.923 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000290, nseq: 482414
	[0000][ M::kt_pipeline] read 482414 sequences (70000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 197884, 1, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 912, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (889.46, 658.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.55, 32.05)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1207, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5389)
[0000][PE] mean and std.dev: (1363.31, 1009.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483530 reads in 246.484 CPU sec, 35.200 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000048, nseq: 481518
	[0000][ M::kt_pipeline] read 481518 sequences (70000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 197772, 3, 72)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (599, 999, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4973)
[0000][PE] mean and std.dev: (1168.00, 832.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.77, 32.01)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1201, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (1103.42, 624.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482414 reads in 247.097 CPU sec, 35.276 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000200, nseq: 481484
	[0000][ M::kt_pipeline] read 481484 sequences (70000200 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 197167, 4, 67)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 669, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (851.81, 566.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.00, 32.11)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 971, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (1010.65, 465.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481518 reads in 260.258 CPU sec, 37.232 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000054, nseq: 480350
	[0000][ M::kt_pipeline] read 480350 sequences (70000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 197265, 0, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 820, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (973.57, 780.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.00, 32.02)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 923, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (903.71, 545.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481484 reads in 243.923 CPU sec, 34.867 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000245, nseq: 481236
	[0000][ M::kt_pipeline] read 481236 sequences (70000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 196782, 5, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 920, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (935.06, 645.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (190, 430)
[0000][PE] mean and std.dev: (309.88, 32.00)
[0000][PE] low and high boundaries for proper pairs: (142, 478)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1075, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (1033.36, 658.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480350 reads in 242.264 CPU sec, 34.550 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000180, nseq: 479734
	[0000][ M::kt_pipeline] read 479734 sequences (70000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 197352, 2, 67)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 567, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (766.57, 813.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.70, 32.15)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1032, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (1093.83, 716.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481236 reads in 240.691 CPU sec, 34.402 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479734
[0000] read_chunk: 70000000, work_chunk_size: 70000174, nseq: 479432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 197092, 6, 62)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 553, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2220)
[0000][PE] mean and std.dev: (532.18, 417.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.70, 32.14)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1043, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1258.61, 941.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 479432 sequences (70000174 bp)...
	[0000][ M::mem_process_seqs] Processed 479734 reads in 255.979 CPU sec, 36.595 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000199, nseq: 479984
	[0000][ M::kt_pipeline] read 479984 sequences (70000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 196878, 3, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (531, 894, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1051.29, 842.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (309.97, 32.13)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1365, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1398.42, 866.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479432 reads in 243.970 CPU sec, 34.841 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000153, nseq: 480418
	[0000][ M::kt_pipeline] read 480418 sequences (70000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197002, 1, 44)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (483, 912, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6186)
[0000][PE] mean and std.dev: (1440.32, 1547.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.76, 32.12)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1064, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (1202.78, 766.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479984 reads in 241.662 CPU sec, 34.463 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000222, nseq: 480308
	[0000][ M::kt_pipeline] read 480308 sequences (70000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 197046, 2, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 879, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4920)
[0000][PE] mean and std.dev: (1157.78, 1114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 435)
[0000][PE] mean and std.dev: (309.91, 32.12)
[0000][PE] low and high boundaries for proper pairs: (135, 485)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1069, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (1154.68, 757.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480418 reads in 239.798 CPU sec, 34.253 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000143, nseq: 481144
	[0000][ M::kt_pipeline] read 481144 sequences (70000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 197440, 6, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (573, 946, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (1031.57, 856.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.00, 32.09)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1063, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1291.58, 926.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480308 reads in 241.852 CPU sec, 34.513 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000222, nseq: 481812
	[0000][ M::kt_pipeline] read 481812 sequences (70000222 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 197065, 3, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 762, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1022.10, 1014.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.85, 32.04)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 994, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2757)
[0000][PE] mean and std.dev: (1000.49, 523.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481144 reads in 257.133 CPU sec, 36.746 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000250, nseq: 480434
	[0000][ M::kt_pipeline] read 480434 sequences (70000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 198104, 0, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (575, 856, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4955)
[0000][PE] mean and std.dev: (1197.50, 1046.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.82, 32.09)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 970, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (1060.83, 645.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481812 reads in 243.754 CPU sec, 34.913 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000094, nseq: 480352
	[0000][ M::kt_pipeline] read 480352 sequences (70000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 196950, 1, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 734, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (815.69, 527.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.60, 32.05)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1219, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1183.92, 666.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480434 reads in 242.434 CPU sec, 34.555 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000244, nseq: 480304
	[0000][ M::kt_pipeline] read 480304 sequences (70000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 197213, 6, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 809, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (1016.24, 927.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.50, 32.09)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1047, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (1003.24, 660.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480352 reads in 237.635 CPU sec, 33.904 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480304
[0000] read_chunk: 70000000, work_chunk_size: 70000011, nseq: 481396
	[0000][ M::kt_pipeline] read 481396 sequences (70000011 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 197412, 6, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 887, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1108.83, 995.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.56, 32.13)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 1068, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (1292.38, 1099.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480304 reads in 253.181 CPU sec, 36.127 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000205, nseq: 484326
	[0000][ M::kt_pipeline] read 484326 sequences (70000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197519, 5, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 751, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1006.63, 966.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.50, 31.97)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1101, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (1240.59, 831.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481396 reads in 247.284 CPU sec, 35.313 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000086, nseq: 485180
	[0000][ M::kt_pipeline] read 485180 sequences (70000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 198609, 2, 70)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 918, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6140)
[0000][PE] mean and std.dev: (1499.61, 1434.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.78, 32.01)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1100, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (1150.98, 693.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484326 reads in 243.791 CPU sec, 34.904 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000293, nseq: 485712
	[0000][ M::kt_pipeline] read 485712 sequences (70000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 198694, 3, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 972, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5533)
[0000][PE] mean and std.dev: (1357.75, 1252.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.78, 31.93)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 945, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (1038.88, 704.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485180 reads in 242.229 CPU sec, 34.547 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000087, nseq: 486246
	[0000][ M::kt_pipeline] read 486246 sequences (70000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 198716, 4, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 791, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (887.39, 751.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.77, 32.07)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1178, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (1130.28, 594.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485712 reads in 246.668 CPU sec, 35.254 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 486246
[0000] read_chunk: 70000000, work_chunk_size: 70000064, nseq: 486206
	[0000][ M::kt_pipeline] read 486206 sequences (70000064 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 199117, 1, 73)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (598, 960, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (1073.56, 823.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.84, 32.02)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1013, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (1208.55, 907.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 486246 reads in 258.339 CPU sec, 36.815 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000225, nseq: 485476
	[0000][ M::kt_pipeline] read 485476 sequences (70000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 486206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 199115, 2, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 712, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (732.47, 505.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.74, 31.90)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1077, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (891.60, 489.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 486206 reads in 243.185 CPU sec, 34.818 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000130, nseq: 485484
	[0000][ M::kt_pipeline] read 485484 sequences (70000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 198836, 3, 61)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 920, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1139.98, 869.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.00, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1063, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (1175.66, 841.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485476 reads in 244.380 CPU sec, 34.919 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000101, nseq: 483012
	[0000][ M::kt_pipeline] read 483012 sequences (70000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 485484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 198847, 1, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 645, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2574)
[0000][PE] mean and std.dev: (757.98, 562.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.23, 32.03)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 915, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (1065.00, 584.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 485484 reads in 245.128 CPU sec, 35.021 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 198208, 6, 76)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 830, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1150.46, 1032.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.20, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1106, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1160.83, 879.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000083, nseq: 479382
	[0000][ M::kt_pipeline] read 479382 sequences (70000083 bp)...
	[0000][ M::mem_process_seqs] Processed 483012 reads in 256.354 CPU sec, 36.587 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000174, nseq: 479450
	[0000][ M::kt_pipeline] read 479450 sequences (70000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 196883, 5, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (537, 946, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5721)
[0000][PE] mean and std.dev: (1424.89, 1427.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.41, 32.19)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1010, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (1172.44, 779.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479382 reads in 239.883 CPU sec, 34.329 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000005, nseq: 479676
	[0000][ M::kt_pipeline] read 479676 sequences (70000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 196898, 4, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 724, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (946.92, 832.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.53, 32.12)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 992, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1124.25, 830.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479450 reads in 248.324 CPU sec, 35.406 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000191, nseq: 479332
	[0000][ M::kt_pipeline] read 479332 sequences (70000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 197281, 3, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 769, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (777.53, 631.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.65, 32.08)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 931, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (1065.55, 777.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479676 reads in 248.864 CPU sec, 35.631 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479332
[0000] read_chunk: 70000000, work_chunk_size: 70000232, nseq: 479554
	[0000][ M::kt_pipeline] read 479554 sequences (70000232 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 196937, 3, 66)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 797, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1081.56, 997.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.45, 32.08)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1122, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (1116.81, 624.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479332 reads in 255.546 CPU sec, 36.529 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000198, nseq: 479470
	[0000][ M::kt_pipeline] read 479470 sequences (70000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 197332, 1, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 715, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (805.42, 721.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.56, 32.12)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 988, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (985.39, 493.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479554 reads in 258.093 CPU sec, 36.876 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000192, nseq: 479416
	[0000][ M::kt_pipeline] read 479416 sequences (70000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 197026, 4, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 787, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (854.18, 639.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.59, 32.10)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1025, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1045.71, 687.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479470 reads in 262.355 CPU sec, 37.500 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000197, nseq: 479484
	[0000][ M::kt_pipeline] read 479484 sequences (70000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197032, 4, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 830, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1010.44, 882.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.70, 32.12)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 981, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (980.74, 648.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479416 reads in 247.884 CPU sec, 35.325 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000159, nseq: 478904
	[0000][ M::kt_pipeline] read 478904 sequences (70000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 196500, 6, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 896, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (985.78, 864.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.48, 32.09)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1108, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1427.91, 995.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479484 reads in 253.629 CPU sec, 36.222 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000206, nseq: 478942
	[0000][ M::kt_pipeline] read 478942 sequences (70000206 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 196630, 4, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 799, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1288.49, 1291.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.57, 32.03)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 958, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1131.45, 880.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478904 reads in 267.466 CPU sec, 38.152 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000081, nseq: 478564
	[0000][ M::kt_pipeline] read 478564 sequences (70000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197298, 3, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1072, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1358.98, 1213.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.77, 32.11)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (525, 1042, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5019)
[0000][PE] mean and std.dev: (1208.51, 967.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478942 reads in 245.759 CPU sec, 35.090 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000137, nseq: 478558
	[0000][ M::kt_pipeline] read 478558 sequences (70000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 196993, 8, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 754, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (982.43, 940.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.71, 32.02)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 1044, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (1081.04, 665.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478564 reads in 250.324 CPU sec, 35.741 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000182, nseq: 478402
	[0000][ M::kt_pipeline] read 478402 sequences (70000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 196394, 1, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (584, 777, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1357.98, 1360.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.71, 32.01)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1159, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (1452.23, 1092.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478558 reads in 249.681 CPU sec, 35.648 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000211, nseq: 478462
	[0000][ M::kt_pipeline] read 478462 sequences (70000211 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 196184, 10, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (621, 901, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1079.67, 742.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (185, 435)
[0000][PE] mean and std.dev: (309.94, 32.10)
[0000][PE] low and high boundaries for proper pairs: (135, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 1708, 4292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12268)
[0000][PE] mean and std.dev: (2592.40, 2470.06)
[0000][PE] low and high boundaries for proper pairs: (1, 16256)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1251, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1387.56, 879.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478402 reads in 258.463 CPU sec, 36.902 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000289, nseq: 478118
	[0000][ M::kt_pipeline] read 478118 sequences (70000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 196242, 4, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 844, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (961.20, 719.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (309.99, 32.06)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1044, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (1093.98, 589.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478462 reads in 265.047 CPU sec, 37.849 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000179, nseq: 478520
	[0000][ M::kt_pipeline] read 478520 sequences (70000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 196764, 0, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 776, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3217)
[0000][PE] mean and std.dev: (938.50, 763.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.11, 32.00)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1246, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (1312.54, 633.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478118 reads in 252.449 CPU sec, 36.063 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000115, nseq: 478802
	[0000][ M::kt_pipeline] read 478802 sequences (70000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 196920, 6, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 934, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (1010.43, 656.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.36, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1169, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1165.98, 659.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478520 reads in 254.374 CPU sec, 36.266 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000282, nseq: 478194
	[0000][ M::kt_pipeline] read 478194 sequences (70000282 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 197177, 4, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 733, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (922.46, 787.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.06, 32.09)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1010, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (1050.30, 527.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478802 reads in 258.257 CPU sec, 36.866 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000183, nseq: 478086
	[0000][ M::kt_pipeline] read 478086 sequences (70000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 196791, 1, 62)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 868, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1121.77, 1081.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.30, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1174, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4315)
[0000][PE] mean and std.dev: (1345.83, 908.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478194 reads in 246.993 CPU sec, 35.375 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000211, nseq: 478048
	[0000][ M::kt_pipeline] read 478048 sequences (70000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 196995, 8, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1155, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5784)
[0000][PE] mean and std.dev: (1269.41, 937.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.29, 32.03)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1133, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1310.40, 895.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478086 reads in 242.651 CPU sec, 34.643 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000299, nseq: 479870
	[0000][ M::kt_pipeline] read 479870 sequences (70000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 196751, 7, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 794, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (878.67, 629.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.40, 32.06)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1170, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1213.59, 634.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478048 reads in 235.609 CPU sec, 33.574 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000134, nseq: 479716
	[0000][ M::kt_pipeline] read 479716 sequences (70000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 197750, 2, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (697, 944, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (961.07, 577.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (309.99, 32.09)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 961, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1169.27, 1017.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479870 reads in 239.424 CPU sec, 34.222 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479716
[0000] read_chunk: 70000000, work_chunk_size: 70000297, nseq: 480240
	[0000][ M::kt_pipeline] read 480240 sequences (70000297 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 197705, 4, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 800, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (927.87, 893.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.70, 32.12)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1109, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1191.79, 896.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479716 reads in 253.600 CPU sec, 36.154 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000102, nseq: 479484
	[0000][ M::kt_pipeline] read 479484 sequences (70000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 198143, 1, 71)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 845, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (811.24, 643.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.79, 32.04)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 879, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3430)
[0000][PE] mean and std.dev: (995.83, 715.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480240 reads in 241.947 CPU sec, 34.534 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000143, nseq: 479622
	[0000][ M::kt_pipeline] read 479622 sequences (70000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 197399, 0, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 759, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (690.79, 499.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.74, 32.07)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 835, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (1010.06, 700.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479484 reads in 239.942 CPU sec, 34.244 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000070, nseq: 480100
	[0000][ M::kt_pipeline] read 480100 sequences (70000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197472, 2, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 685, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (789.35, 658.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 309, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.60, 32.01)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1008, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (1092.14, 702.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479622 reads in 248.260 CPU sec, 35.470 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 197410, 3, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 869, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (921.62, 766.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.77, 32.07)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 949, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (844.47, 497.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000138, nseq: 480068
	[0000][ M::kt_pipeline] read 480068 sequences (70000138 bp)...
	[0000][ M::mem_process_seqs] Processed 480100 reads in 253.351 CPU sec, 36.151 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000259, nseq: 479946
	[0000][ M::kt_pipeline] read 479946 sequences (70000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 197670, 2, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1002, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (1038.55, 888.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.86, 31.99)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1053, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1236.65, 862.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480068 reads in 235.483 CPU sec, 33.650 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000078, nseq: 480100
	[0000][ M::kt_pipeline] read 480100 sequences (70000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 197673, 3, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (643, 868, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (939.48, 597.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (309.97, 32.05)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 967, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1235.15, 878.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479946 reads in 239.824 CPU sec, 34.250 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000132, nseq: 479428
	[0000][ M::kt_pipeline] read 479428 sequences (70000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197545, 5, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (483, 966, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6507)
[0000][PE] mean and std.dev: (1359.30, 1209.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.03, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1049, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (1220.20, 721.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480100 reads in 240.746 CPU sec, 34.424 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000054, nseq: 479572
	[0000][ M::kt_pipeline] read 479572 sequences (70000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 197362, 4, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 925, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1104.52, 1006.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.75, 31.99)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1109, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (1110.79, 562.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479428 reads in 239.040 CPU sec, 34.153 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 197435, 2, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (852, 1401, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5931)
[0000][PE] mean and std.dev: (1497.03, 1185.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (187, 432)
[0000][PE] mean and std.dev: (309.93, 31.97)
[0000][PE] low and high boundaries for proper pairs: (138, 481)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1496, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6806)
[0000][PE] mean and std.dev: (1849.42, 1532.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000194, nseq: 479396
	[0000][ M::kt_pipeline] read 479396 sequences (70000194 bp)...
	[0000][ M::mem_process_seqs] Processed 479572 reads in 246.947 CPU sec, 35.211 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000274, nseq: 479908
	[0000][ M::kt_pipeline] read 479908 sequences (70000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 197379, 5, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 894, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1156.27, 1053.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (190, 430)
[0000][PE] mean and std.dev: (309.93, 31.97)
[0000][PE] low and high boundaries for proper pairs: (142, 478)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1016, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5141)
[0000][PE] mean and std.dev: (1275.78, 1080.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479396 reads in 240.446 CPU sec, 34.361 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000205, nseq: 480262
	[0000][ M::kt_pipeline] read 480262 sequences (70000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 197800, 7, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 863, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (799.34, 526.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.05, 31.97)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1207, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4573)
[0000][PE] mean and std.dev: (1428.55, 927.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479908 reads in 238.947 CPU sec, 34.187 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000021, nseq: 480274
	[0000][ M::kt_pipeline] read 480274 sequences (70000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 198010, 5, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 724, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (749.82, 685.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.26, 31.97)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 1075, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (1105.23, 769.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480262 reads in 233.263 CPU sec, 33.200 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 198173, 5, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (526, 742, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (1022.77, 769.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.20, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 941, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1146.21, 789.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000292, nseq: 479374
	[0000][ M::kt_pipeline] read 479374 sequences (70000292 bp)...
	[0000][ M::mem_process_seqs] Processed 480274 reads in 246.128 CPU sec, 35.193 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000237, nseq: 479528
	[0000][ M::kt_pipeline] read 479528 sequences (70000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 197537, 4, 66)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 856, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1149.91, 935.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.54, 31.98)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 1130, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (980.45, 584.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479374 reads in 240.577 CPU sec, 34.391 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000241, nseq: 479768
	[0000][ M::kt_pipeline] read 479768 sequences (70000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 197831, 3, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 889, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1178.60, 1119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.39, 32.06)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1244, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1390.35, 1059.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479528 reads in 235.270 CPU sec, 33.565 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000159, nseq: 479314
	[0000][ M::kt_pipeline] read 479314 sequences (70000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 197525, 6, 44)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 876, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (1018.25, 817.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.42, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1045, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1001.41, 693.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479768 reads in 233.955 CPU sec, 33.395 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 197594, 5, 62)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 652, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1009.73, 982.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000] read_chunk: 70000000, work_chunk_size: 70000109, nseq: 479286
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.62, 31.99)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1030, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1333.77, 1049.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 479286 sequences (70000109 bp)...
	[0000][ M::mem_process_seqs] Processed 479314 reads in 245.280 CPU sec, 35.096 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000024, nseq: 480170
	[0000][ M::kt_pipeline] read 480170 sequences (70000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 197548, 6, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 658, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (725.91, 573.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.55, 32.06)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1157, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (1245.77, 810.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479286 reads in 241.278 CPU sec, 34.516 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000134, nseq: 481558
	[0000][ M::kt_pipeline] read 481558 sequences (70000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 197865, 7, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 994, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (970.93, 780.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.63, 32.09)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1192, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1292.00, 817.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480170 reads in 237.137 CPU sec, 33.830 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000050, nseq: 481300
	[0000][ M::kt_pipeline] read 481300 sequences (70000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 198293, 5, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (674, 905, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1045.98, 679.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.45, 32.10)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 985, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (1060.67, 587.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481558 reads in 235.362 CPU sec, 33.560 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000277, nseq: 480170
	[0000][ M::kt_pipeline] read 480170 sequences (70000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 198272, 7, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (544, 768, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (890.02, 585.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.43, 32.17)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 951, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (1090.90, 755.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481300 reads in 235.356 CPU sec, 33.639 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000144, nseq: 481046
	[0000][ M::kt_pipeline] read 481046 sequences (70000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 198279, 2, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 882, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (898.76, 705.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.64, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1123, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7224)
[0000][PE] mean and std.dev: (1768.15, 1751.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480170 reads in 252.275 CPU sec, 35.962 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000002, nseq: 481424
	[0000][ M::kt_pipeline] read 481424 sequences (70000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 198377, 3, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 847, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (967.02, 869.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.70, 32.14)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1085, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (1108.24, 485.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481046 reads in 232.218 CPU sec, 33.220 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000014, nseq: 481720
	[0000][ M::kt_pipeline] read 481720 sequences (70000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 198468, 2, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (527, 1003, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (1045.65, 786.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.79, 32.03)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1046, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1595.47, 1420.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481424 reads in 231.351 CPU sec, 32.954 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000114, nseq: 481398
	[0000][ M::kt_pipeline] read 481398 sequences (70000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 198669, 5, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 835, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (849.69, 569.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.76, 32.11)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 941, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1186.50, 982.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481720 reads in 236.525 CPU sec, 33.840 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 198225, 4, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 866, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (897.22, 645.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.72, 32.05)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1105, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (1411.78, 1054.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000022, nseq: 482948
	[0000][ M::kt_pipeline] read 482948 sequences (70000022 bp)...
	[0000][ M::mem_process_seqs] Processed 481398 reads in 249.609 CPU sec, 35.650 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000079, nseq: 483550
	[0000][ M::kt_pipeline] read 483550 sequences (70000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 198930, 6, 72)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 921, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1148.08, 1048.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.60, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1109, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1215.30, 729.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482948 reads in 237.317 CPU sec, 33.920 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000053, nseq: 483984
	[0000][ M::kt_pipeline] read 483984 sequences (70000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 199019, 4, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 1000, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (1252.96, 1008.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.41, 31.99)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 933, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1134.90, 812.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483550 reads in 236.614 CPU sec, 33.713 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000286, nseq: 484346
	[0000][ M::kt_pipeline] read 484346 sequences (70000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 199792, 4, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 930, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1204.53, 1128.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.41, 32.05)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1154, 3123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7907)
[0000][PE] mean and std.dev: (1865.41, 1708.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483984 reads in 239.147 CPU sec, 34.211 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000155, nseq: 481948
	[0000][ M::kt_pipeline] read 481948 sequences (70000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 484346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 199817, 3, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 744, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (918.10, 882.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.53, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1141, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5833)
[0000][PE] mean and std.dev: (1517.86, 1124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 484346 reads in 236.779 CPU sec, 33.801 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 198209, 5, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 998, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1121.60, 957.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.46, 31.93)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1029, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (1025.96, 715.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000037, nseq: 480840
	[0000][ M::kt_pipeline] read 480840 sequences (70000037 bp)...
	[0000][ M::mem_process_seqs] Processed 481948 reads in 249.061 CPU sec, 35.507 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000276, nseq: 480260
	[0000][ M::kt_pipeline] read 480260 sequences (70000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 198113, 2, 61)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 951, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (973.57, 658.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.53, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1237, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (1346.43, 785.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480840 reads in 235.717 CPU sec, 33.700 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000176, nseq: 480908
	[0000][ M::kt_pipeline] read 480908 sequences (70000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 197980, 5, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1063, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5922)
[0000][PE] mean and std.dev: (1508.69, 1499.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.77, 32.02)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 981, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (1070.89, 777.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480260 reads in 237.721 CPU sec, 33.933 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000102, nseq: 481346
	[0000][ M::kt_pipeline] read 481346 sequences (70000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 198284, 2, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (598, 1186, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1267.43, 1012.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.78, 32.02)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1353, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1264.78, 875.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480908 reads in 238.821 CPU sec, 34.144 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 198881, 4, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 890, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (966.09, 836.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.82, 32.07)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1075, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (1165.30, 773.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000212, nseq: 481560
	[0000][ M::kt_pipeline] read 481560 sequences (70000212 bp)...
	[0000][ M::mem_process_seqs] Processed 481346 reads in 246.555 CPU sec, 35.231 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000081, nseq: 483346
	[0000][ M::kt_pipeline] read 483346 sequences (70000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 198594, 4, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1040, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (1193.60, 945.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.72, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1179, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1572.12, 1233.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481560 reads in 235.222 CPU sec, 33.658 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000268, nseq: 482562
	[0000][ M::kt_pipeline] read 482562 sequences (70000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 483346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 198819, 4, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (739, 1213, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (1162.90, 656.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.71, 32.07)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1043, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (1094.94, 627.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 483346 reads in 239.005 CPU sec, 34.170 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000026, nseq: 482994
	[0000][ M::kt_pipeline] read 482994 sequences (70000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 198947, 2, 66)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (676, 1003, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (968.92, 562.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.05, 32.16)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1032, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3569)
[0000][PE] mean and std.dev: (1096.30, 687.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482562 reads in 239.058 CPU sec, 34.188 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 199175, 1, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 654, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (876.39, 653.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.13, 32.04)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1021, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (1013.42, 581.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000040, nseq: 482978
	[0000][ M::kt_pipeline] read 482978 sequences (70000040 bp)...
	[0000][ M::mem_process_seqs] Processed 482994 reads in 243.959 CPU sec, 34.872 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000118, nseq: 481276
	[0000][ M::kt_pipeline] read 481276 sequences (70000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 199186, 2, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 852, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (1026.19, 894.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (310.99, 32.07)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1070, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1216.98, 769.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482978 reads in 235.440 CPU sec, 33.677 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000093, nseq: 481284
	[0000][ M::kt_pipeline] read 481284 sequences (70000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 198499, 1, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 1000, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (1212.79, 941.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.43, 32.12)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1217, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6722)
[0000][PE] mean and std.dev: (1610.98, 1220.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481276 reads in 235.947 CPU sec, 33.717 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000221, nseq: 480470
	[0000][ M::kt_pipeline] read 480470 sequences (70000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 198714, 4, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 829, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (880.57, 755.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.64, 32.17)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1015, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1796.88, 1536.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481284 reads in 235.411 CPU sec, 33.678 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000020, nseq: 480368
	[0000][ M::kt_pipeline] read 480368 sequences (70000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 198022, 3, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 930, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1303.62, 1303.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.80, 32.12)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1133, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1270.91, 882.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480470 reads in 232.276 CPU sec, 33.178 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 198266, 5, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 875, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (989.06, 855.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.61, 32.05)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1160, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1247.06, 802.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000198, nseq: 480984
	[0000][ M::kt_pipeline] read 480984 sequences (70000198 bp)...
	[0000][ M::mem_process_seqs] Processed 480368 reads in 244.536 CPU sec, 34.861 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000216, nseq: 481078
	[0000][ M::kt_pipeline] read 481078 sequences (70000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 198317, 5, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 1010, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1244.23, 1097.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.70, 32.14)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1113, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1186.00, 781.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480984 reads in 238.465 CPU sec, 34.100 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000048, nseq: 481156
	[0000][ M::kt_pipeline] read 481156 sequences (70000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 198375, 4, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 822, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1023.78, 953.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.64, 32.09)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 884, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (918.28, 665.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481078 reads in 235.316 CPU sec, 33.630 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000008, nseq: 481894
	[0000][ M::kt_pipeline] read 481894 sequences (70000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 198186, 7, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 917, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (929.21, 760.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.58, 32.12)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1133, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1142.82, 673.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481156 reads in 233.579 CPU sec, 33.325 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 199072, 2, 62)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1111, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (1123.15, 919.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.52, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1100, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (1241.29, 919.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000122, nseq: 481774
	[0000][ M::kt_pipeline] read 481774 sequences (70000122 bp)...
	[0000][ M::mem_process_seqs] Processed 481894 reads in 247.204 CPU sec, 35.323 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000217, nseq: 482484
	[0000][ M::kt_pipeline] read 482484 sequences (70000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 199071, 3, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 841, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (885.04, 728.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.39, 32.03)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1130, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1409.56, 1027.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481774 reads in 234.325 CPU sec, 33.546 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000102, nseq: 481792
	[0000][ M::kt_pipeline] read 481792 sequences (70000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 482484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 199107, 1, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 892, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1051.71, 925.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.54, 32.10)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 943, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (944.83, 521.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482484 reads in 231.335 CPU sec, 32.983 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000202, nseq: 480492
	[0000][ M::kt_pipeline] read 480492 sequences (70000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 481792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 198708, 4, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 712, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (847.18, 725.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.51, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1106, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (1170.61, 831.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 481792 reads in 231.418 CPU sec, 33.148 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000270, nseq: 479858
	[0000][ M::kt_pipeline] read 479858 sequences (70000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 197916, 1, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 887, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (969.90, 797.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.44, 31.99)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1080, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (1207.74, 930.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480492 reads in 236.687 CPU sec, 33.888 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 197837, 1, 61)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 833, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (1038.59, 838.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.74, 32.08)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1157, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (1400.38, 986.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000054, nseq: 479700
	[0000][ M::kt_pipeline] read 479700 sequences (70000054 bp)...
	[0000][ M::mem_process_seqs] Processed 479858 reads in 246.975 CPU sec, 35.264 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000252, nseq: 480284
	[0000][ M::kt_pipeline] read 480284 sequences (70000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 197851, 7, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 847, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1322.38, 1398.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.79, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1140, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (1418.75, 1023.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479700 reads in 234.613 CPU sec, 33.617 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000143, nseq: 480812
	[0000][ M::kt_pipeline] read 480812 sequences (70000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 198117, 5, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 999, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1111.27, 871.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (310.85, 32.00)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1172, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1294.49, 979.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480284 reads in 230.318 CPU sec, 32.922 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000087, nseq: 480526
	[0000][ M::kt_pipeline] read 480526 sequences (70000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 198467, 5, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 903, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (1011.21, 883.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.87, 32.08)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1190, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1508.34, 1061.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480812 reads in 238.023 CPU sec, 34.012 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 198086, 7, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 1030, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (1094.73, 762.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.10, 32.01)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1370, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4946)
[0000][PE] mean and std.dev: (1362.42, 954.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000092, nseq: 480608
	[0000][ M::kt_pipeline] read 480608 sequences (70000092 bp)...
	[0000][ M::mem_process_seqs] Processed 480526 reads in 249.103 CPU sec, 35.583 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000086, nseq: 480374
	[0000][ M::kt_pipeline] read 480374 sequences (70000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 198437, 4, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1049, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5911)
[0000][PE] mean and std.dev: (1340.38, 1123.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.19, 32.02)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1114, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1152.91, 680.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480608 reads in 232.512 CPU sec, 33.273 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000200, nseq: 480664
	[0000][ M::kt_pipeline] read 480664 sequences (70000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 198235, 2, 67)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 763, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (1013.64, 951.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.03, 31.99)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1172, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1255.25, 980.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480374 reads in 229.555 CPU sec, 32.812 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000040, nseq: 479544
	[0000][ M::kt_pipeline] read 479544 sequences (70000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 198195, 3, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 788, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4973)
[0000][PE] mean and std.dev: (1117.33, 987.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.15, 32.04)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 944, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (1183.77, 837.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480664 reads in 236.819 CPU sec, 33.773 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 198062, 4, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 781, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (734.48, 660.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.76, 32.08)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1011, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1087.73, 610.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000056, nseq: 479832
	[0000][ M::kt_pipeline] read 479832 sequences (70000056 bp)...
	[0000][ M::mem_process_seqs] Processed 479544 reads in 246.340 CPU sec, 35.233 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000021, nseq: 479328
	[0000][ M::kt_pipeline] read 479328 sequences (70000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 198068, 1, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (588, 974, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (1063.00, 768.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.77, 32.06)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1043, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1237.11, 855.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479832 reads in 236.300 CPU sec, 33.905 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000131, nseq: 479576
	[0000][ M::kt_pipeline] read 479576 sequences (70000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 197929, 1, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 734, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2330)
[0000][PE] mean and std.dev: (718.76, 458.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.69, 32.16)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1087, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1152.63, 729.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479328 reads in 236.001 CPU sec, 33.754 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000296, nseq: 479914
	[0000][ M::kt_pipeline] read 479914 sequences (70000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 198263, 4, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 737, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (787.39, 625.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.60, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 981, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (1053.80, 793.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479576 reads in 235.305 CPU sec, 33.709 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000002, nseq: 479982
	[0000][ M::kt_pipeline] read 479982 sequences (70000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 197971, 2, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 882, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (913.44, 650.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.65, 32.06)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1149, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1267.25, 868.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479914 reads in 237.321 CPU sec, 33.961 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 198445, 3, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 752, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (806.93, 747.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.71, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (656, 877, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (886.58, 409.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000240, nseq: 479710
	[0000][ M::kt_pipeline] read 479710 sequences (70000240 bp)...
	[0000][ M::mem_process_seqs] Processed 479982 reads in 245.768 CPU sec, 35.057 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000180, nseq: 479978
	[0000][ M::kt_pipeline] read 479978 sequences (70000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 198330, 4, 62)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (611, 880, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (881.96, 560.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.58, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1059, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1329.66, 913.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479710 reads in 237.860 CPU sec, 34.049 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000149, nseq: 479768
	[0000][ M::kt_pipeline] read 479768 sequences (70000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 198255, 6, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1025, 3225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9055)
[0000][PE] mean and std.dev: (1767.62, 1882.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.58, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1126, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (1169.65, 731.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479978 reads in 237.276 CPU sec, 33.882 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000125, nseq: 479080
	[0000][ M::kt_pipeline] read 479080 sequences (70000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 198495, 3, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 803, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (861.46, 693.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.68, 32.00)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1221, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (1124.11, 581.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479768 reads in 233.237 CPU sec, 33.422 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 197845, 5, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 1009, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (1112.74, 810.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.56, 32.03)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1096, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (1131.89, 734.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000152, nseq: 480012
	[0000][ M::kt_pipeline] read 480012 sequences (70000152 bp)...
	[0000][ M::mem_process_seqs] Processed 479080 reads in 244.582 CPU sec, 34.908 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000158, nseq: 479384
	[0000][ M::kt_pipeline] read 479384 sequences (70000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197964, 7, 62)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 900, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1132.49, 993.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 310, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.57, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 983, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (899.18, 474.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480012 reads in 234.527 CPU sec, 33.607 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000029, nseq: 480040
	[0000][ M::kt_pipeline] read 480040 sequences (70000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 197971, 2, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 753, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (874.78, 720.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.79, 32.03)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 939, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (917.98, 504.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479384 reads in 231.813 CPU sec, 33.060 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000208, nseq: 479536
	[0000][ M::kt_pipeline] read 479536 sequences (70000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 198125, 3, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (611, 981, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (1063.10, 663.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (191, 431)
[0000][PE] mean and std.dev: (310.82, 31.94)
[0000][PE] low and high boundaries for proper pairs: (143, 479)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1007, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (1251.14, 1020.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480040 reads in 229.043 CPU sec, 32.789 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 198229, 4, 48)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 796, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (760.97, 482.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (310.98, 31.98)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 873, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (921.33, 556.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000005, nseq: 479572
	[0000][ M::kt_pipeline] read 479572 sequences (70000005 bp)...
	[0000][ M::mem_process_seqs] Processed 479536 reads in 234.900 CPU sec, 33.686 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000062, nseq: 478590
	[0000][ M::kt_pipeline] read 478590 sequences (70000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 197424, 3, 42)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 703, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (846.75, 634.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.06, 32.03)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1113, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (1020.22, 639.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479572 reads in 229.873 CPU sec, 32.954 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000184, nseq: 478694
	[0000][ M::kt_pipeline] read 478694 sequences (70000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 196918, 4, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 1074, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (1311.22, 1098.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.14, 32.11)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1024, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (1068.52, 720.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478590 reads in 233.176 CPU sec, 33.448 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000127, nseq: 480088
	[0000][ M::kt_pipeline] read 480088 sequences (70000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 197637, 6, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (568, 964, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1230.45, 970.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.17, 32.00)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1116, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (1358.75, 961.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478694 reads in 228.558 CPU sec, 32.789 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000176, nseq: 479570
	[0000][ M::kt_pipeline] read 479570 sequences (70000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 198427, 3, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (599, 955, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (1135.21, 757.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.10, 32.04)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1261, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (1248.02, 721.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480088 reads in 226.052 CPU sec, 32.322 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 198157, 2, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 880, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1022.89, 781.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.25, 32.06)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1042, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1292.10, 895.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000049, nseq: 479576
	[0000][ M::kt_pipeline] read 479576 sequences (70000049 bp)...
	[0000][ M::mem_process_seqs] Processed 479570 reads in 235.229 CPU sec, 33.673 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000135, nseq: 478968
	[0000][ M::kt_pipeline] read 478968 sequences (70000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 198409, 6, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 786, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (839.55, 503.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 312, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.45, 32.10)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1166, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (1368.83, 941.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479576 reads in 226.727 CPU sec, 32.561 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000134, nseq: 479292
	[0000][ M::kt_pipeline] read 479292 sequences (70000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 197957, 5, 47)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 820, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (1060.63, 837.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 312, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.29, 32.13)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 903, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (898.95, 469.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478968 reads in 225.111 CPU sec, 32.248 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000245, nseq: 479920
	[0000][ M::kt_pipeline] read 479920 sequences (70000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 198099, 2, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 818, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (884.69, 723.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.63, 32.08)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 844, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1016.54, 775.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479292 reads in 221.597 CPU sec, 31.654 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 198223, 2, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1067, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6257)
[0000][PE] mean and std.dev: (1533.46, 1620.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.68, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1032, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (1157.70, 768.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000286, nseq: 479496
	[0000][ M::kt_pipeline] read 479496 sequences (70000286 bp)...
	[0000][ M::mem_process_seqs] Processed 479920 reads in 234.435 CPU sec, 33.689 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000094, nseq: 479782
	[0000][ M::kt_pipeline] read 479782 sequences (70000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 198462, 4, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (640, 973, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (997.11, 587.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.78, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1219, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5184)
[0000][PE] mean and std.dev: (1560.02, 1175.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479496 reads in 231.852 CPU sec, 33.258 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000047, nseq: 479804
	[0000][ M::kt_pipeline] read 479804 sequences (70000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 198465, 3, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 968, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1032.38, 872.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.64, 32.02)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1161, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1383.75, 1136.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479782 reads in 231.441 CPU sec, 33.139 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000181, nseq: 480380
	[0000][ M::kt_pipeline] read 480380 sequences (70000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 198518, 3, 70)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 724, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (711.07, 602.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.68, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 981, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1001.16, 581.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479804 reads in 224.318 CPU sec, 32.158 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000267, nseq: 480044
	[0000][ M::kt_pipeline] read 480044 sequences (70000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 198912, 1, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 892, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (933.65, 610.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.57, 32.11)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 978, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (997.06, 542.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 480380 reads in 228.687 CPU sec, 32.802 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 480044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 198545, 3, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 744, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (880.90, 746.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.53, 32.13)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 921, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (949.72, 724.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000242, nseq: 479934
	[0000][ M::kt_pipeline] read 479934 sequences (70000242 bp)...
	[0000][ M::mem_process_seqs] Processed 480044 reads in 237.480 CPU sec, 33.973 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000057, nseq: 479342
	[0000][ M::kt_pipeline] read 479342 sequences (70000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 198662, 1, 74)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 718, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2066)
[0000][PE] mean and std.dev: (608.79, 336.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.63, 32.15)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1015, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (1128.58, 696.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479934 reads in 225.116 CPU sec, 32.222 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000069, nseq: 479506
	[0000][ M::kt_pipeline] read 479506 sequences (70000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 198148, 8, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 369, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2346)
[0000][PE] mean and std.dev: (509.80, 480.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.68, 32.07)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1123, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (1154.14, 760.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479342 reads in 223.778 CPU sec, 32.076 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000143, nseq: 479606
	[0000][ M::kt_pipeline] read 479606 sequences (70000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 198364, 6, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (566, 912, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (974.25, 654.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.76, 32.01)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1128, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (1301.20, 942.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479506 reads in 225.580 CPU sec, 32.347 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 198443, 3, 51)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 994, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6500)
[0000][PE] mean and std.dev: (1383.02, 1384.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.67, 32.04)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1039, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (1257.52, 895.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000111, nseq: 479316
	[0000][ M::kt_pipeline] read 479316 sequences (70000111 bp)...
	[0000][ M::mem_process_seqs] Processed 479606 reads in 234.764 CPU sec, 33.618 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000147, nseq: 479406
	[0000][ M::kt_pipeline] read 479406 sequences (70000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 198113, 5, 52)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 886, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1020.43, 794.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (191, 431)
[0000][PE] mean and std.dev: (310.88, 31.99)
[0000][PE] low and high boundaries for proper pairs: (143, 479)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 954, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (1101.88, 634.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479316 reads in 234.985 CPU sec, 33.738 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000139, nseq: 479534
	[0000][ M::kt_pipeline] read 479534 sequences (70000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 197120, 6, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 613, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (773.55, 705.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (186, 436)
[0000][PE] mean and std.dev: (310.83, 32.10)
[0000][PE] low and high boundaries for proper pairs: (136, 486)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1144, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (1310.80, 996.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479406 reads in 232.306 CPU sec, 33.261 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000063, nseq: 479700
	[0000][ M::kt_pipeline] read 479700 sequences (70000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 197323, 4, 39)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 748, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (899.10, 618.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (310.90, 31.96)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 995, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1395.35, 1063.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479534 reads in 233.576 CPU sec, 33.516 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 198382, 2, 53)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 822, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (1052.04, 853.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.11, 32.01)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 957, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (1095.49, 777.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 70000000, work_chunk_size: 70000240, nseq: 479480
	[0000][ M::kt_pipeline] read 479480 sequences (70000240 bp)...
	[0000][ M::mem_process_seqs] Processed 479700 reads in 237.782 CPU sec, 34.150 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000169, nseq: 479692
	[0000][ M::kt_pipeline] read 479692 sequences (70000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (49, 198310, 4, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 808, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1101.31, 961.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.22, 32.07)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 828, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1048.84, 824.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479480 reads in 226.284 CPU sec, 32.422 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000164, nseq: 479342
	[0000][ M::kt_pipeline] read 479342 sequences (70000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 198456, 4, 38)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 889, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (940.60, 726.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 311, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.28, 31.98)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1153, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1548.54, 1199.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479692 reads in 224.566 CPU sec, 32.096 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000254, nseq: 478986
	[0000][ M::kt_pipeline] read 478986 sequences (70000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 479342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 198000, 2, 60)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 751, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2498)
[0000][PE] mean and std.dev: (728.10, 470.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 312, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.24, 32.09)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1169, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (1246.29, 949.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 479342 reads in 226.209 CPU sec, 32.407 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000213, nseq: 518214
	[0000][ M::kt_pipeline] read 518214 sequences (70000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 478986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 197964, 3, 58)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (613, 1085, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (1431.54, 1323.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 312, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (189, 434)
[0000][PE] mean and std.dev: (311.29, 32.08)
[0000][PE] low and high boundaries for proper pairs: (140, 483)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1148, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (1292.56, 646.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 478986 reads in 223.282 CPU sec, 32.016 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000045, nseq: 669500
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 518214
	[0000][ M::kt_pipeline] read 669500 sequences (70000045 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 205049, 4, 78)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (2, 519, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (570.14, 680.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 311, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 433)
[0000][PE] mean and std.dev: (310.83, 32.15)
[0000][PE] low and high boundaries for proper pairs: (139, 482)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 824, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (907.15, 826.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 518214 reads in 260.532 CPU sec, 37.191 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000208, nseq: 668920
	[0000][ M::kt_pipeline] read 668920 sequences (70000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 669500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (263, 228586, 5, 184)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (2, 2, 82)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 242)
[0000][PE] mean and std.dev: (9.15, 29.16)
[0000][PE] low and high boundaries for proper pairs: (1, 322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (293, 321, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (177, 467)
[0000][PE] mean and std.dev: (323.59, 41.22)
[0000][PE] low and high boundaries for proper pairs: (119, 525)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1, 2, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2134)
[0000][PE] mean and std.dev: (262.83, 479.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 669500 reads in 339.186 CPU sec, 48.571 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000083, nseq: 669484
	[0000][ M::kt_pipeline] read 669484 sequences (70000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 668920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (319, 226608, 10, 213)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1, 2, 17)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 49)
[0000][PE] mean and std.dev: (3.13, 6.20)
[0000][PE] low and high boundaries for proper pairs: (1, 65)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 328, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (175, 485)
[0000][PE] mean and std.dev: (331.15, 42.99)
[0000][PE] low and high boundaries for proper pairs: (113, 547)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 516, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (799.89, 984.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1, 2, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (285.11, 492.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 668920 reads in 342.969 CPU sec, 49.039 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000040, nseq: 665576
	[0000][ M::kt_pipeline] read 665576 sequences (70000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 669484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (345, 226865, 11, 216)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1, 2, 4)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10)
[0000][PE] mean and std.dev: (1.73, 0.95)
[0000][PE] low and high boundaries for proper pairs: (1, 13)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (299, 328, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (177, 482)
[0000][PE] mean and std.dev: (330.76, 42.91)
[0000][PE] low and high boundaries for proper pairs: (116, 543)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (252, 403, 5755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16761)
[0000][PE] mean and std.dev: (2391.36, 2716.79)
[0000][PE] low and high boundaries for proper pairs: (1, 22264)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1, 2, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2536)
[0000][PE] mean and std.dev: (369.45, 573.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 669484 reads in 339.290 CPU sec, 48.687 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 70000000, work_chunk_size: 70000208, nseq: 670390
	[0000][ M::kt_pipeline] read 670390 sequences (70000208 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 665576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (331, 225735, 8, 179)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (2, 2, 23)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 65)
[0000][PE] mean and std.dev: (3.48, 7.26)
[0000][PE] low and high boundaries for proper pairs: (1, 86)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (298, 328, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (174, 484)
[0000][PE] mean and std.dev: (330.43, 43.19)
[0000][PE] low and high boundaries for proper pairs: (112, 546)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1, 1, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (311.12, 560.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 665576 reads in 350.062 CPU sec, 50.390 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 70000039, nseq: 669608
	[0000][ M::kt_pipeline] read 669608 sequences (70000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 670390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (316, 226478, 6, 209)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (2, 2, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 173)
[0000][PE] mean and std.dev: (5.98, 16.86)
[0000][PE] low and high boundaries for proper pairs: (1, 230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (292, 320, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (176, 466)
[0000][PE] mean and std.dev: (322.94, 41.45)
[0000][PE] low and high boundaries for proper pairs: (118, 524)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1, 2, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2161)
[0000][PE] mean and std.dev: (325.68, 545.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 670390 reads in 340.814 CPU sec, 48.710 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 70000000, work_chunk_size: 37741871, nseq: 362496
	[0000][ M::kt_pipeline] read 362496 sequences (37741871 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 669608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (348, 226607, 10, 225)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1, 2, 6)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16)
[0000][PE] mean and std.dev: (1.85, 1.38)
[0000][PE] low and high boundaries for proper pairs: (1, 21)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (285, 311, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (177, 447)
[0000][PE] mean and std.dev: (313.29, 37.65)
[0000][PE] low and high boundaries for proper pairs: (123, 501)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 606, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (495.25, 409.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4252)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1, 2, 754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2260)
[0000][PE] mean and std.dev: (296.55, 499.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 669608 reads in 336.570 CPU sec, 48.338 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 2201849155, n: 362496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (150, 123110, 6, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1, 2, 23)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 67)
[0000][PE] mean and std.dev: (3.23, 5.41)
[0000][PE] low and high boundaries for proper pairs: (1, 89)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 312, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (180, 445)
[0000][PE] mean and std.dev: (313.80, 37.25)
[0000][PE] low and high boundaries for proper pairs: (127, 498)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1, 2, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2089)
[0000][PE] mean and std.dev: (283.58, 491.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 362496 reads in 194.956 CPU sec, 28.426 real sec
[0000] read_chunk: 70000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 70000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 7
Processor is running @2200.175881 MHz
Runtime profile:

	Time taken for main_mem function: 12216.16 sec

	IO times (sec) :
	Reading IO time (reads) avg: 786.71, (786.71, 786.71)
	Writing IO time (SAM) avg: 2874.67, (2874.67, 2874.67)
	Reading IO time (Reference Genome) avg: 16.07, (16.07, 16.07)
	Index read time avg: 30.50, (30.50, 30.50)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 12168.20
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 12163.33, (12163.33, 12163.33)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 3184.84, (3184.84, 3184.84)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 8926.40, (8926.40, 8926.40)
		SMEM compute avg: 3039.50, (3041.28, 3037.42)
		SAL compute avg: 1150.22, (1152.70, 1148.09)
				MEM_SA avg: 834.55, (836.77, 832.34)

		BSW time, avg: 4274.90, (4276.20, 4274.00)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 16
	SIMD_WIDTH16 X: 8
	AVG_SEEDS_PER_READ: 64
samblaster: Marked 172612 of 79667612 (0.22%) read ids as duplicates using 1528740k memory in 4M53S(293.225S) CPU seconds and 3H23M39S(12219S) wall time.
[bam_sort_core] merging from 75 files and 1 in-memory blocks...
